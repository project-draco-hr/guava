{
  return new EntrySet<K,V>(){
    @Override Map<K,V> map(){
      return AsMapView.this;
    }
    @Override public Iterator<Entry<K,V>> iterator(){
      final Iterator<K> backingIterator=set.iterator();
      return new Iterator<Entry<K,V>>(){
        @Override public boolean hasNext(){
          return backingIterator.hasNext();
        }
        @Override public Entry<K,V> next(){
          K k=backingIterator.next();
          return Maps.immutableEntry(k,function.apply(k));
        }
        @Override public void remove(){
          backingIterator.remove();
        }
      }
;
    }
  }
;
}
