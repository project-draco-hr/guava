{
  final Iterator<Entry<K,V1>> mapIterator=fromMap.entrySet().iterator();
  return new Iterator<Entry<K,V2>>(){
    @Override public boolean hasNext(){
      return mapIterator.hasNext();
    }
    @Override public Entry<K,V2> next(){
      final Entry<K,V1> entry=mapIterator.next();
      return new AbstractMapEntry<K,V2>(){
        @Override public K getKey(){
          return entry.getKey();
        }
        @Override public V2 getValue(){
          return transformer.transformEntry(entry.getKey(),entry.getValue());
        }
      }
;
    }
    @Override public void remove(){
      mapIterator.remove();
    }
  }
;
}
