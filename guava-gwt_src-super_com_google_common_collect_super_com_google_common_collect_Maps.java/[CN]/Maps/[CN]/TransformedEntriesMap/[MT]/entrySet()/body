{
  Set<Entry<K,V2>> result=entrySet;
  if (result == null) {
    entrySet=result=new EntrySet<K,V2>(){
      @Override Map<K,V2> map(){
        return TransformedEntriesMap.this;
      }
      @Override public Iterator<Entry<K,V2>> iterator(){
        return new TransformedIterator<Entry<K,V1>,Entry<K,V2>>(fromMap.entrySet().iterator()){
          @Override Entry<K,V2> transform(          final Entry<K,V1> entry){
            return new AbstractMapEntry<K,V2>(){
              @Override public K getKey(){
                return entry.getKey();
              }
              @Override public V2 getValue(){
                return transformer.transformEntry(entry.getKey(),entry.getValue());
              }
            }
;
          }
        }
;
      }
    }
;
  }
  return result;
}
