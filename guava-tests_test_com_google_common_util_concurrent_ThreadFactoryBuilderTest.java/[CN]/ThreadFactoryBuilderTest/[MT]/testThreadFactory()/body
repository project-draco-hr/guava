{
  final String THREAD_NAME="ludicrous speed";
  final int THREAD_PRIORITY=1;
  final boolean THREAD_DAEMON=false;
  ThreadFactory backingThreadFactory=new ThreadFactory(){
    @Override public Thread newThread(    Runnable r){
      Thread thread=new Thread(r);
      thread.setName(THREAD_NAME);
      thread.setPriority(THREAD_PRIORITY);
      thread.setDaemon(THREAD_DAEMON);
      thread.setUncaughtExceptionHandler(UNCAUGHT_EXCEPTION_HANDLER);
      return thread;
    }
  }
;
  Thread thread=builder.setThreadFactory(backingThreadFactory).build().newThread(monitoredRunnable);
  assertEquals(THREAD_NAME,thread.getName());
  assertEquals(THREAD_PRIORITY,thread.getPriority());
  assertEquals(THREAD_DAEMON,thread.isDaemon());
  assertSame(UNCAUGHT_EXCEPTION_HANDLER,thread.getUncaughtExceptionHandler());
  assertSame(Thread.State.NEW,thread.getState());
  assertFalse(completed);
  thread.start();
  thread.join();
  assertTrue(completed);
}
