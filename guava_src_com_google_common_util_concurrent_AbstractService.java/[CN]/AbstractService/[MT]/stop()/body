{
  lock.lock();
  try {
switch (state) {
case NEW:
      state=State.TERMINATED;
    terminated(State.NEW);
  break;
case STARTING:
shutdownWhenStartupFinishes=true;
stopping(State.STARTING);
break;
case RUNNING:
state=State.STOPPING;
stopping(State.RUNNING);
doStop();
break;
case STOPPING:
case TERMINATED:
case FAILED:
break;
default :
throw new AssertionError("Unexpected state: " + state);
}
}
 catch (Throwable shutdownFailure) {
notifyFailed(shutdownFailure);
}
 finally {
lock.unlock();
}
return shutdown;
}
