{
  Map<Currency,String> map=ImmutableMap.of(Currency.DOLLAR,"dollar",Currency.PESO,"peso",Currency.FRANC,"franc");
  EnumHashBiMap<Currency,String> bimap=EnumHashBiMap.create(map);
  assertEquals("dollar",bimap.get(Currency.DOLLAR));
  assertEquals(Currency.DOLLAR,bimap.inverse().get("dollar"));
  try {
    EnumHashBiMap.create(Collections.<Currency,String>emptyMap());
    fail("IllegalArgumentException expected");
  }
 catch (  IllegalArgumentException expected) {
  }
  Map<Currency,String> emptyBimap=EnumHashBiMap.create(Currency.class);
  bimap=EnumHashBiMap.create(emptyBimap);
  assertTrue(bimap.isEmpty());
  Map<Currency,Country> emptyBimap2=EnumBiMap.create(Currency.class,Country.class);
  EnumHashBiMap<Currency,Country> bimap2=EnumHashBiMap.create(emptyBimap2);
  assertTrue(bimap2.isEmpty());
}
