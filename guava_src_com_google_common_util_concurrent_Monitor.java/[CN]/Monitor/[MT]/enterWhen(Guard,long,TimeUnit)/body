{
  if (guard.monitor != this) {
    throw new IllegalMonitorStateException();
  }
  final ReentrantLock lock=this.lock;
  boolean reentrant=lock.isHeldByCurrentThread();
  long remainingNanos;
  if (!fair && lock.tryLock()) {
    remainingNanos=unit.toNanos(time);
  }
 else {
    long startNanos=System.nanoTime();
    if (!lock.tryLock(time,unit)) {
      return false;
    }
    remainingNanos=unit.toNanos(time) - (System.nanoTime() - startNanos);
  }
  boolean satisfied=false;
  try {
    satisfied=waitInterruptibly(guard,remainingNanos,reentrant);
  }
  finally {
    if (!satisfied) {
      lock.unlock();
    }
  }
  return satisfied;
}
