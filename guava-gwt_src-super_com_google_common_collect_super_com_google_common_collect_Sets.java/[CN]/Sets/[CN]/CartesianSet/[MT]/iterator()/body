{
  return new AbstractIndexedListIterator<List<B>>(size){
    @Override protected List<B> get(    int index){
      Object[] tuple=new Object[axes.size()];
      for (int i=0; i < tuple.length; i++) {
        tuple[i]=axes.get(i).getForIndex(index);
      }
      @SuppressWarnings("unchecked") List<B> result=(ImmutableList<B>)ImmutableList.copyOf(tuple);
      return result;
    }
  }
;
}
