{
  if (root == null) {
    return null;
  }
  if (beyond(range,root.getKey(),side)) {
    N left=root.childOrNull(LEFT);
    N right=root.childOrNull(RIGHT);
switch (side) {
case LEFT:
      right=subTreeBeyondRangeToSide(range,balancePolicy,nodeFactory,LEFT,right);
    break;
case RIGHT:
  left=subTreeBeyondRangeToSide(range,balancePolicy,nodeFactory,RIGHT,left);
break;
default :
throw new AssertionError();
}
return balancePolicy.balance(nodeFactory,root,left,right);
}
 else {
return subTreeBeyondRangeToSide(range,balancePolicy,nodeFactory,side,root.childOrNull(side));
}
}
