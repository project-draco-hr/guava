{
  final AtomicInteger totalCalls=new AtomicInteger();
  Runnable suspender=new Runnable(){
    @Override public void run(){
      totalCalls.incrementAndGet();
      e.suspend();
    }
  }
;
  assertFalse(fakePool.hasNext());
  e.execute(suspender);
  assertTrue(fakePool.hasNext());
  e.execute(suspender);
  fakePool.runAll();
  assertEquals(1,totalCalls.get());
  assertFalse(fakePool.hasNext());
  e.execute(suspender);
  assertFalse(fakePool.hasNext());
  e.resume();
  assertTrue(fakePool.hasNext());
  fakePool.runAll();
  assertEquals(2,totalCalls.get());
  assertFalse(fakePool.hasNext());
  e.suspend();
  e.resume();
  assertFalse(fakePool.hasNext());
  e.resume();
  assertTrue(fakePool.hasNext());
  fakePool.runAll();
  assertEquals(3,totalCalls.get());
}
