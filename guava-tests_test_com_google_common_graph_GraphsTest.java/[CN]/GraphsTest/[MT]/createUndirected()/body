{
  MutableNetwork<Integer,String> undirectedGraph=NetworkBuilder.undirected().build();
  assertThat(undirectedGraph.nodes()).isEmpty();
  assertThat(undirectedGraph.edges()).isEmpty();
  assertThat(undirectedGraph.addEdge(N1,N2,E12)).isTrue();
  assertThat(undirectedGraph.edgesConnecting(N1,N2)).isEqualTo(ImmutableSet.of(E12));
  assertThat(undirectedGraph.edgesConnecting(N2,N1)).isEqualTo(ImmutableSet.of(E12));
  try {
    undirectedGraph.addEdge(N1,N2,E12_A);
    fail(ERROR_ADDED_PARALLEL_EDGE);
  }
 catch (  IllegalArgumentException e) {
    assertThat(e.getMessage()).contains(ERROR_PARALLEL_EDGE);
  }
  try {
    undirectedGraph.addEdge(N2,N1,E21);
    fail(ERROR_ADDED_PARALLEL_EDGE);
  }
 catch (  IllegalArgumentException e) {
    assertThat(e.getMessage()).contains(ERROR_PARALLEL_EDGE);
  }
  assertThat(undirectedGraph.addEdge(N1,N1,E11)).isTrue();
}
