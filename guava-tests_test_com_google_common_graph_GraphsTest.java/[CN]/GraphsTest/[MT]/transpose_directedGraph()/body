{
  MutableGraph<Integer> directedGraph=GraphBuilder.directed().allowsSelfLoops(true).build();
  directedGraph.putEdge(N3,N1);
  directedGraph.putEdge(N1,N2);
  directedGraph.putEdge(N1,N1);
  directedGraph.putEdge(N3,N4);
  MutableGraph<Integer> expectedTranspose=GraphBuilder.directed().allowsSelfLoops(true).build();
  expectedTranspose.putEdge(N1,N3);
  expectedTranspose.putEdge(N2,N1);
  expectedTranspose.putEdge(N1,N1);
  expectedTranspose.putEdge(N4,N3);
  Graph<Integer> transpose=Graphs.transpose(directedGraph);
  assertThat(Graphs.equivalent(transpose,expectedTranspose)).isTrue();
  assertThat(transpose(transpose)).isSameAs(directedGraph);
  AbstractGraphTest.validateGraph(transpose);
  assertThat(transpose.successors(N1)).doesNotContain(N2);
  directedGraph.putEdge(N2,N1);
  assertThat(transpose.successors(N1)).contains(N2);
  AbstractGraphTest.validateGraph(transpose);
}
