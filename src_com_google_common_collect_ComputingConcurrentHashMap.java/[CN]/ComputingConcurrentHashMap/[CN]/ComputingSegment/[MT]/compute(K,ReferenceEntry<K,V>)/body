{
  V value;
  try {
    value=computingFunction.apply(key);
  }
 catch (  ComputationException e) {
    setValueReference(entry,new ComputationExceptionReference<K,V>(e.getCause()));
    throw e;
  }
catch (  Throwable t) {
    setValueReference(entry,new ComputationExceptionReference<K,V>(t));
    throw new ComputationException(t);
  }
  if (value == null) {
    String message=computingFunction + " returned null for key " + key+ ".";
    setValueReference(entry,new NullOutputExceptionReference<K,V>(message));
    throw new NullOutputException(message);
  }
  if (evictsBySize() || expiresAfterWrite()) {
    lock();
    try {
      setValue(entry,value);
    }
  finally {
      unlock();
    }
  }
 else {
    setValue(entry,value);
  }
  return value;
}
