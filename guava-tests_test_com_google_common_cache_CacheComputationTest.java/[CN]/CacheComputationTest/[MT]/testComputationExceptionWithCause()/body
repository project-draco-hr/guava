{
  final Exception cause=new Exception();
  final UncheckedExecutionException uee=new UncheckedExecutionException(cause);
  final ExecutionException ee=new ExecutionException(cause);
  Cache<Object,Object> cacheUnchecked=CacheBuilder.newBuilder().build(exceptionLoader(uee));
  Cache<Object,Object> cacheChecked=CacheBuilder.newBuilder().build(exceptionLoader(ee));
  try {
    cacheUnchecked.get(new Object());
    fail();
  }
 catch (  ExecutionException e) {
    fail();
  }
catch (  UncheckedExecutionException caughtEe) {
    assertSame(uee,caughtEe.getCause());
  }
  try {
    cacheUnchecked.getUnchecked(new Object());
    fail();
  }
 catch (  UncheckedExecutionException caughtUee) {
    assertSame(uee,caughtUee.getCause());
  }
  try {
    cacheUnchecked.refresh(new Object());
    fail();
  }
 catch (  ExecutionException e) {
    fail();
  }
catch (  UncheckedExecutionException caughtEe) {
    assertSame(uee,caughtEe.getCause());
  }
  try {
    cacheChecked.get(new Object());
    fail();
  }
 catch (  ExecutionException caughtEe) {
    assertSame(ee,caughtEe.getCause());
  }
  try {
    cacheChecked.getUnchecked(new Object());
    fail();
  }
 catch (  UncheckedExecutionException caughtUee) {
    assertSame(ee,caughtUee.getCause());
  }
  try {
    cacheChecked.refresh(new Object());
    fail();
  }
 catch (  ExecutionException caughtEe) {
    assertSame(ee,caughtEe.getCause());
  }
}
