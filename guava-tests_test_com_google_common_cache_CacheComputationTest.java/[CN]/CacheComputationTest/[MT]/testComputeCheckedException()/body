{
  Exception e=new Exception();
  CacheLoader<Object,Object> loader=exceptionLoader(e);
  Cache<Object,Object> cache=CacheBuilder.newBuilder().build(loader);
  CacheStats stats=cache.stats();
  assertEquals(0,stats.missCount());
  assertEquals(0,stats.loadSuccessCount());
  assertEquals(0,stats.loadExceptionCount());
  try {
    cache.get(new Object());
    fail();
  }
 catch (  ExecutionException expected) {
    assertSame(e,expected.getCause());
  }
  stats=cache.stats();
  assertEquals(1,stats.missCount());
  assertEquals(0,stats.loadSuccessCount());
  assertEquals(1,stats.loadExceptionCount());
  try {
    cache.getUnchecked(new Object());
    fail();
  }
 catch (  UncheckedExecutionException expected) {
    assertSame(e,expected.getCause());
  }
  stats=cache.stats();
  assertEquals(2,stats.missCount());
  assertEquals(0,stats.loadSuccessCount());
  assertEquals(2,stats.loadExceptionCount());
  try {
    cache.refresh(new Object());
    fail();
  }
 catch (  ExecutionException expected) {
    assertSame(e,expected.getCause());
  }
  stats=cache.stats();
  assertEquals(2,stats.missCount());
  assertEquals(0,stats.loadSuccessCount());
  assertEquals(3,stats.loadExceptionCount());
  Exception callableException=new Exception();
  try {
    cache.get(new Object(),Callables.throwing(callableException));
    fail();
  }
 catch (  ExecutionException expected) {
    assertSame(callableException,expected.getCause());
  }
  stats=cache.stats();
  assertEquals(3,stats.missCount());
  assertEquals(0,stats.loadSuccessCount());
  assertEquals(4,stats.loadExceptionCount());
}
