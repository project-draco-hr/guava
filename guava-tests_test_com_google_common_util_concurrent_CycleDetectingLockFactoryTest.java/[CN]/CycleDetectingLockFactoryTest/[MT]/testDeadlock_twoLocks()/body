{
  lockA.lock();
  lockB.lock();
  lockA.unlock();
  lockB.unlock();
  PotentialDeadlockException firstException=null;
  lockB.lock();
  try {
    lockA.lock();
    fail("Expected PotentialDeadlockException");
  }
 catch (  PotentialDeadlockException expected) {
    checkMessage(expected,"LockB -> LockA","LockA -> LockB");
    firstException=expected;
  }
  try {
    lockA.lock();
    fail("Expected PotentialDeadlockException");
  }
 catch (  PotentialDeadlockException expected) {
    checkMessage(expected,"LockB -> LockA","LockA -> LockB");
    assertSame(firstException.getCause(),expected.getCause());
  }
  lockB.unlock();
  lockA.lock();
}
