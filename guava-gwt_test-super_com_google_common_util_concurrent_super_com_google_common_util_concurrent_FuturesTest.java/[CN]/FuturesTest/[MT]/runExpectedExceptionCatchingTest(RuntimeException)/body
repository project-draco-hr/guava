{
  FunctionSpy<Throwable,Integer> fallback=spy(new Function<Throwable,Integer>(){
    @Override public Integer apply(    Throwable t){
      throw expectedException;
    }
  }
);
  ListenableFuture<Integer> failingFuture=Futures.immediateFailedFuture(new RuntimeException());
  ListenableFuture<Integer> faultToleranteFuture=Futures.catching(failingFuture,Throwable.class,fallback);
  try {
    faultToleranteFuture.get();
    fail("An Exception should have been thrown!");
  }
 catch (  ExecutionException ee) {
    assertSame(expectedException,ee.getCause());
  }
  fallback.verifyCallCount(1);
}
