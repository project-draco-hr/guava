{
  assertThat(transformation.isHorizontal()).isTrue();
  assertThat(transformation.isVertical()).isFalse();
  assertThat(transformation.inverse().isHorizontal()).isFalse();
  assertThat(transformation.inverse().isVertical()).isTrue();
  assertThat(transformation.transform(-1.0)).isWithin(ALLOWED_ERROR).of(y);
  assertThat(transformation.transform(1.0)).isWithin(ALLOWED_ERROR).of(y);
  try {
    transformation.inverse().transform(0.0);
    fail("Expected IllegalStateException");
  }
 catch (  IllegalStateException expected) {
  }
  assertThat(transformation.slope()).isWithin(ALLOWED_ERROR).of(0.0);
  try {
    transformation.inverse().slope();
    fail("Expected IllegalStateException");
  }
 catch (  IllegalStateException expected) {
  }
  assertThat(transformation.inverse()).isSameAs(transformation.inverse());
  assertThat(transformation.inverse().inverse()).isSameAs(transformation);
}
