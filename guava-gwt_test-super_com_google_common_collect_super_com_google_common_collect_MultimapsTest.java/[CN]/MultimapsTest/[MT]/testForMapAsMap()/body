{
  Map<String,Integer> map=Maps.newHashMap();
  map.put("foo",1);
  map.put("bar",2);
  Map<String,Collection<Integer>> asMap=Multimaps.forMap(map).asMap();
  assertEquals(Collections.singleton(1),asMap.get("foo"));
  assertNull(asMap.get("cow"));
  assertTrue(asMap.containsKey("foo"));
  assertFalse(asMap.containsKey("cow"));
  Set<Entry<String,Collection<Integer>>> entries=asMap.entrySet();
  assertFalse(entries.contains(4.5));
  assertFalse(entries.remove(4.5));
  assertFalse(entries.contains(Maps.immutableEntry("foo",Collections.singletonList(1))));
  assertFalse(entries.remove(Maps.immutableEntry("foo",Collections.singletonList(1))));
  assertFalse(entries.contains(Maps.immutableEntry("foo",Sets.newLinkedHashSet(asList(1,2)))));
  assertFalse(entries.remove(Maps.immutableEntry("foo",Sets.newLinkedHashSet(asList(1,2)))));
  assertFalse(entries.contains(Maps.immutableEntry("foo",Collections.singleton(2))));
  assertFalse(entries.remove(Maps.immutableEntry("foo",Collections.singleton(2))));
  assertTrue(map.containsKey("foo"));
  assertTrue(entries.contains(Maps.immutableEntry("foo",Collections.singleton(1))));
  assertTrue(entries.remove(Maps.immutableEntry("foo",Collections.singleton(1))));
  assertFalse(map.containsKey("foo"));
}
