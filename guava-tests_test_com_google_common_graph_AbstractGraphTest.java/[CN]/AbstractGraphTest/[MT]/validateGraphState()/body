{
  new EqualsTester().addEqualityGroup(graph,Graphs.copyOf(graph),ImmutableGraph.copyOf(graph)).testEquals();
  String graphString=graph.toString();
  assertThat(graphString).contains("isDirected: " + graph.isDirected());
  assertThat(graphString).contains("allowsSelfLoops: " + graph.allowsSelfLoops());
  int nodeStart=graphString.indexOf("nodes:");
  int edgeStart=graphString.indexOf("edges:");
  String nodeString=graphString.substring(nodeStart,edgeStart);
  for (  Integer node : graph.nodes()) {
    assertThat(nodeString).contains(node.toString());
    assertThat(graph.adjacentNodes(node)).hasSize(graph.degree(node));
    assertThat(graph.predecessors(node)).hasSize(graph.inDegree(node));
    assertThat(graph.successors(node)).hasSize(graph.outDegree(node));
    for (    Integer adjacentNode : graph.adjacentNodes(node)) {
      assertTrue(graph.predecessors(node).contains(adjacentNode) || graph.successors(node).contains(adjacentNode));
    }
    for (    Integer predecessor : graph.predecessors(node)) {
      assertThat(graph.successors(predecessor)).contains(node);
    }
    for (    Integer successor : graph.successors(node)) {
      assertThat(graph.predecessors(successor)).contains(node);
    }
  }
}
