{
  checkNotNull(future);
  checkArgument(!RuntimeException.class.isAssignableFrom(exceptionClass),"Futures.get exception type (%s) must not be a RuntimeException",exceptionClass);
  try {
    return future.get();
  }
 catch (  InterruptedException e) {
    currentThread().interrupt();
    throw newWithCause(exceptionClass,e);
  }
catch (  CancellationException e) {
    throw e;
  }
catch (  ExecutionException e) {
    throw newWithCause(exceptionClass,e.getCause());
  }
catch (  RuntimeException e) {
    throw newWithCause(exceptionClass,e);
  }
}
