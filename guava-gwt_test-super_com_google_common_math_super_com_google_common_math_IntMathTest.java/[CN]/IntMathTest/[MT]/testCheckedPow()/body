{
  for (  int b : ALL_INTEGER_CANDIDATES) {
    for (    int k : EXPONENTS) {
      BigInteger expectedResult=valueOf(b).pow(k);
      boolean expectedSuccess=fitsInInt(expectedResult);
      try {
        assertEquals(b + "^" + k,force32(expectedResult.intValue()),IntMath.checkedPow(b,k));
        assertTrue(b + "^" + k+ " should have succeeded",expectedSuccess);
      }
 catch (      ArithmeticException e) {
        assertFalse(b + "^" + k+ " should have failed",expectedSuccess);
      }
    }
  }
}
