{
  Map<Float,String> m=ImmutableMap.of(4.0f,"A",3.0f,"B",2.0f,"C",1.0f,"D");
  Function<? super Integer,Boolean> h=Functions.constant(Boolean.TRUE);
  Function<? super String,Integer> g=new HashCodeFunction();
  Function<Float,String> f=Functions.forMap(m,"F");
  Function<Float,Boolean> c1=Functions.compose(Functions.compose(h,g),f);
  Function<Float,Boolean> c2=Functions.compose(h,Functions.compose(g,f));
  assertEquals(c1.hashCode(),c2.hashCode());
  assertEquals(c1.apply(1.0f),c2.apply(1.0f));
  assertEquals(c1.apply(5.0f),c2.apply(5.0f));
}
