{
  List<Entry<String>> expected=asList(Multisets.immutableEntry("a",1),Multisets.immutableEntry("b",2),Multisets.immutableEntry("c",3),Multisets.immutableEntry("d",4),Multisets.immutableEntry("e",5));
  new IteratorTester<Entry<String>>(5,asList(SUPPORTS_REMOVE),expected,IteratorTester.KnownOrder.UNKNOWN_ORDER){
    ConcurrentHashMultiset<String> multiset;
    @Override protected Iterator<Entry<String>> newTargetIterator(){
      multiset=ConcurrentHashMultiset.create();
      multiset.add("a",1);
      multiset.add("b",2);
      multiset.add("c",3);
      multiset.add("d",4);
      multiset.add("e",5);
      return multiset.entryIterator();
    }
    @Override protected void verify(    List<Entry<String>> elements){
      super.verify(elements);
      assertEquals(ImmutableSet.copyOf(elements),ImmutableSet.copyOf(multiset.entryIterator()));
    }
  }
.test();
}
