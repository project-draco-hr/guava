{
  return new Map.Entry<K,V>(){
    @Override public K getKey(){
      return key;
    }
    @Override public V getValue(){
      return value;
    }
    @Override public V setValue(    V value){
      throw new UnsupportedOperationException();
    }
    @SuppressWarnings("unchecked") @Override public boolean equals(    Object o){
      if (o instanceof Map.Entry<?,?>) {
        Map.Entry<K,V> e=(Map.Entry<K,V>)o;
        e.setValue(value);
        return Helpers.equal(this.getKey(),e.getKey()) && Helpers.equal(this.getValue(),e.getValue());
      }
      return false;
    }
    @Override public int hashCode(){
      K k=getKey();
      V v=getValue();
      return ((k == null) ? 0 : k.hashCode()) ^ ((v == null) ? 0 : v.hashCode());
    }
    /** 
 * Returns a string representation of the form <code>{key}={value}</code>.
 */
    @Override public String toString(){
      return getKey() + "=" + getValue();
    }
  }
;
}
