{
  ImmutableSortedSet<Integer> set=ContiguousSet.create(Range.closed(1,3),integers());
  ASSERT.that(set.subSet(1,4)).hasContentsInOrder(1,2,3);
  ASSERT.that(set.subSet(2,4)).hasContentsInOrder(2,3);
  ASSERT.that(set.subSet(3,4)).hasContentsInOrder(3);
  ASSERT.that(set.subSet(3,3)).isEmpty();
  ASSERT.that(set.subSet(2,3)).hasContentsInOrder(2);
  ASSERT.that(set.subSet(1,3)).hasContentsInOrder(1,2);
  ASSERT.that(set.subSet(1,2)).hasContentsInOrder(1);
  ASSERT.that(set.subSet(2,2)).isEmpty();
  ASSERT.that(set.subSet(Integer.MIN_VALUE,Integer.MAX_VALUE)).hasContentsInOrder(1,2,3);
  ASSERT.that(set.subSet(1,true,3,true)).hasContentsInOrder(1,2,3);
  ASSERT.that(set.subSet(1,false,3,true)).hasContentsInOrder(2,3);
  ASSERT.that(set.subSet(1,true,3,false)).hasContentsInOrder(1,2);
  ASSERT.that(set.subSet(1,false,3,false)).hasContentsInOrder(2);
}
