{
  new EqualsTester().addEqualityGroup(ContiguousSet.create(Ranges.closed(1,3),integers()),ContiguousSet.create(Ranges.closedOpen(1,4),integers()),ContiguousSet.create(Ranges.openClosed(0,3),integers()),ContiguousSet.create(Ranges.open(0,4),integers()),ContiguousSet.create(Ranges.closed(1,3),NOT_EQUAL_TO_INTEGERS),ContiguousSet.create(Ranges.closedOpen(1,4),NOT_EQUAL_TO_INTEGERS),ContiguousSet.create(Ranges.openClosed(0,3),NOT_EQUAL_TO_INTEGERS),ContiguousSet.create(Ranges.open(0,4),NOT_EQUAL_TO_INTEGERS),ImmutableSortedSet.of(1,2,3)).testEquals();
  assertEquals(ContiguousSet.create(Ranges.closed(Integer.MIN_VALUE,Integer.MAX_VALUE),integers()),ContiguousSet.create(Ranges.<Integer>all(),integers()));
  assertEquals(ContiguousSet.create(Ranges.closed(Integer.MIN_VALUE,Integer.MAX_VALUE),integers()),ContiguousSet.create(Ranges.atLeast(Integer.MIN_VALUE),integers()));
  assertEquals(ContiguousSet.create(Ranges.closed(Integer.MIN_VALUE,Integer.MAX_VALUE),integers()),ContiguousSet.create(Ranges.atMost(Integer.MAX_VALUE),integers()));
}
