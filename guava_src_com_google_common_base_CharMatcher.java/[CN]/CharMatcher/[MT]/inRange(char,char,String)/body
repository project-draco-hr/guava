{
  char[] chars=new char[endInclusive - startInclusive + 1];
  for (int i=startInclusive; i <= endInclusive; i++) {
    chars[i - startInclusive]=(char)i;
  }
  return new CharMatcher(description){
    @Override public boolean matches(    char c){
      return startInclusive <= c && c <= endInclusive;
    }
    @Override void setBits(    LookupTable table){
      char c=startInclusive;
      while (true) {
        table.set(c);
        if (c++ == endInclusive) {
          break;
        }
      }
    }
    @Override public CharMatcher precomputed(){
      return this;
    }
  }
;
}
