{
  multimap.put("foo",1);
  multimap.put("foo",nullValue());
  multimap.put(nullKey(),3);
  Collection<Entry<String,Collection<Integer>>> entries=multimap.asMap().entrySet();
  assertEquals(2,entries.size());
  assertTrue(entries.contains(Maps.immutableEntry("foo",multimap.get("foo"))));
  assertFalse(entries.contains(Maps.immutableEntry("bar",multimap.get("foo"))));
  assertFalse(entries.contains(Maps.immutableEntry("bar",null)));
  assertFalse(entries.contains(Maps.immutableEntry("foo",null)));
  assertFalse(entries.contains(Maps.immutableEntry("foo",asList(1,4))));
  assertFalse(entries.contains("foo"));
  Iterator<Entry<String,Collection<Integer>>> iterator=entries.iterator();
  for (int i=0; i < 2; i++) {
    assertTrue(iterator.hasNext());
    Entry<String,Collection<Integer>> entry=iterator.next();
    if ("foo".equals(entry.getKey())) {
      assertEquals(2,entry.getValue().size());
      assertTrue(entry.getValue().contains(1));
      assertTrue(entry.getValue().contains(nullValue()));
    }
 else {
      assertEquals(nullKey(),entry.getKey());
      assertEquals(1,entry.getValue().size());
      assertTrue(entry.getValue().contains(3));
    }
  }
  assertFalse(iterator.hasNext());
}
