{
  multimap.put("foo",1);
  multimap.put("foo",nullValue());
  multimap.put(nullKey(),3);
  Map<String,Collection<Integer>> map=multimap.asMap();
  assertEquals(2,map.size());
  ASSERT.that(map.get("foo")).has().allOf(1,nullValue());
  ASSERT.that(map.get(nullKey())).has().item(3);
  assertNull(map.get("bar"));
  assertTrue(map.containsKey("foo"));
  assertTrue(map.containsKey(nullKey()));
  assertFalse(multimap.containsKey("bar"));
  ASSERT.that(map.remove("foo")).has().allOf(1,nullValue());
  assertFalse(multimap.containsKey("foo"));
  assertEquals(1,multimap.size());
  assertNull(map.remove("bar"));
  multimap.get(nullKey()).add(5);
  assertTrue(multimap.containsEntry(nullKey(),5));
  assertEquals(2,multimap.size());
  multimap.get(nullKey()).clear();
  assertTrue(multimap.isEmpty());
  assertEquals(0,multimap.size());
  try {
    map.put("bar",asList(4,8));
    fail("Expected UnsupportedOperationException");
  }
 catch (  UnsupportedOperationException expected) {
  }
  multimap.put("bar",5);
  assertSize(1);
  map.clear();
  assertSize(0);
}
