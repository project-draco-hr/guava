{
  Optional<BstInOrderPath<N>> result;
switch (side) {
case LEFT:
    result=prevInOrder;
  return (result == null) ? prevInOrder=computeNextInOrder(side) : result;
case RIGHT:
result=nextInOrder;
return (result == null) ? nextInOrder=computeNextInOrder(side) : result;
default :
throw new AssertionError();
}
}
