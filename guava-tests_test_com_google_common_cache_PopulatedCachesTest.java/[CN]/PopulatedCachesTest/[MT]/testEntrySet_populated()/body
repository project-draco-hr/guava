{
  for (  LoadingCache<Object,Object> cache : caches()) {
    Set<Entry<Object,Object>> entries=cache.asMap().entrySet();
    List<Entry<Object,Object>> warmed=warmUp(cache,WARMUP_MIN,WARMUP_MAX);
    Set<Entry<Object,Object>> entrySet=Maps.newHashMap(cache.asMap()).entrySet();
    ASSERT.that(entries).is(entrySet);
    ASSERT.that(entries.toArray()).hasContentsAnyOrder(entrySet.toArray());
    ASSERT.that(entries.toArray(new Entry[0])).hasContentsAnyOrder(entrySet.toArray(new Entry[0]));
    new EqualsTester().addEqualityGroup(cache.asMap().entrySet(),entries).addEqualityGroup(ImmutableSet.of()).testEquals();
    assertEquals(WARMUP_SIZE,entries.size());
    for (int i=WARMUP_MIN; i < WARMUP_MAX; i++) {
      Entry<Object,Object> newEntry=warmed.get(i - WARMUP_MIN);
      assertTrue(entries.contains(newEntry));
      assertTrue(entries.remove(newEntry));
      assertFalse(entries.remove(newEntry));
      assertFalse(entries.contains(newEntry));
    }
    checkEmpty(entries);
    checkEmpty(cache);
  }
}
