{
  for (  LoadingCache<Object,Object> cache : caches()) {
    Set<Object> keys=cache.asMap().keySet();
    List<Entry<Object,Object>> warmed=warmUp(cache);
    Set<Object> expected=Maps.newHashMap(cache.asMap()).keySet();
    assertThat(keys).has().exactlyAs(expected);
    assertThat(keys.toArray()).asList().has().exactlyAs(expected);
    assertThat(keys.toArray(new Object[0])).asList().has().exactlyAs(expected);
    new EqualsTester().addEqualityGroup(cache.asMap().keySet(),keys).addEqualityGroup(ImmutableSet.of()).testEquals();
    assertEquals(WARMUP_SIZE,keys.size());
    for (int i=WARMUP_MIN; i < WARMUP_MAX; i++) {
      Object key=warmed.get(i - WARMUP_MIN).getKey();
      assertTrue(keys.contains(key));
      assertTrue(keys.remove(key));
      assertFalse(keys.remove(key));
      assertFalse(keys.contains(key));
    }
    checkEmpty(keys);
    checkEmpty(cache);
  }
}
