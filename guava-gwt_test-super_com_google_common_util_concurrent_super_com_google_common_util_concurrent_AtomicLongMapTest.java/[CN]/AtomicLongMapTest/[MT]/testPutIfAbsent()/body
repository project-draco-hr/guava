{
  AtomicLongMap<String> map=AtomicLongMap.create();
  String key="key";
  long newValue=random.nextInt(MAX_ADDEND);
  for (int i=0; i < ITERATIONS; i++) {
    long before=map.get(key);
    long result=map.putIfAbsent(key,newValue);
    long after=map.get(key);
    assertEquals(before,result);
    assertEquals(before == 0 ? newValue : before,after);
    map.remove(key);
    before=map.get(key);
    result=map.putIfAbsent(key,newValue);
    after=map.get(key);
    assertEquals(0,before);
    assertEquals(before,result);
    assertEquals(newValue,after);
    map.put(key,0L);
    before=map.get(key);
    result=map.putIfAbsent(key,newValue);
    after=map.get(key);
    assertEquals(0,before);
    assertEquals(before,result);
    assertEquals(newValue,after);
    newValue+=newValue;
  }
  assertEquals(1,map.size());
  assertTrue(!map.isEmpty());
  assertTrue(map.containsKey(key));
}
