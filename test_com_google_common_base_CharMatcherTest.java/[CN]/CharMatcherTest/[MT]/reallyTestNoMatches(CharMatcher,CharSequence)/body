{
  assertFalse(matcher.matches(s.charAt(0)));
  assertEquals(-1,matcher.indexIn(s));
  assertEquals(-1,matcher.indexIn(s,0));
  assertEquals(-1,matcher.indexIn(s,1));
  assertEquals(-1,matcher.indexIn(s,s.length()));
  try {
    matcher.indexIn(s,s.length() + 1);
    fail();
  }
 catch (  IndexOutOfBoundsException expected) {
  }
  try {
    matcher.indexIn(s,-1);
    fail();
  }
 catch (  IndexOutOfBoundsException expected) {
  }
  assertEquals(-1,matcher.lastIndexIn(s));
  assertFalse(matcher.matchesAnyOf(s));
  assertFalse(matcher.matchesAllOf(s));
  assertTrue(matcher.matchesNoneOf(s));
  assertEquals(s.toString(),matcher.removeFrom(s));
  assertEquals(s.toString(),matcher.replaceFrom(s,'z'));
  assertEquals(s.toString(),matcher.replaceFrom(s,"ZZ"));
  assertEquals(s.toString(),matcher.trimFrom(s));
  assertEquals(0,matcher.countIn(s));
}
