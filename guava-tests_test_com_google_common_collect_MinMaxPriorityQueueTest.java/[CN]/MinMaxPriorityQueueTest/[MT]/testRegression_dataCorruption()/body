{
  int size=8;
  List<Integer> expected=createOrderedList(size);
  MinMaxPriorityQueue<Integer> q=MinMaxPriorityQueue.create(expected);
  List<Integer> contents=Lists.newArrayList(expected);
  List<Integer> elements=Lists.newArrayListWithCapacity(size);
  while (!q.isEmpty()) {
    assertThat(q).has().exactlyAs(contents);
    Integer next=q.pollFirst();
    contents.remove(next);
    assertThat(q).has().exactlyAs(contents);
    for (int i=0; i <= size; i++) {
      q.add(i);
      contents.add(i);
      assertThat(q).has().exactlyAs(contents);
      q.add(next);
      contents.add(next);
      assertThat(q).has().exactlyAs(contents);
      q.remove(i);
      assertTrue(contents.remove(Integer.valueOf(i)));
      assertThat(q).has().exactlyAs(contents);
      assertEquals(next,q.poll());
      contents.remove(next);
      assertThat(q).has().exactlyAs(contents);
    }
    elements.add(next);
  }
  assertEquals(expected,elements);
}
