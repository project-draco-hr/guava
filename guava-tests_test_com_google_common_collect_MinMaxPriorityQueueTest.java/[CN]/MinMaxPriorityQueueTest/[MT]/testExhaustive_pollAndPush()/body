{
  int size=8;
  List<Integer> expected=createOrderedList(size);
  for (  Collection<Integer> perm : Collections2.permutations(expected)) {
    MinMaxPriorityQueue<Integer> q=MinMaxPriorityQueue.create(perm);
    List<Integer> elements=Lists.newArrayListWithCapacity(size);
    while (!q.isEmpty()) {
      Integer next=q.pollFirst();
      for (int i=0; i <= size; i++) {
        assertTrue(q.add(i));
        assertTrue(q.add(next));
        assertTrue(q.remove(i));
        assertEquals(next,q.poll());
      }
      elements.add(next);
    }
    assertEquals("Started with " + perm,expected,elements);
  }
}
