{
  for (  BoundType lBoundType : BoundType.values()) {
    GeneralRange<Integer> range=GeneralRange.downTo(Ordering.natural(),3,lBoundType);
    for (int i=1; i <= 5; i++) {
      assertEquals(i > 3 || (i == 3 && lBoundType == CLOSED),range.contains(i));
      assertEquals(i < 3 || (i == 3 && lBoundType == OPEN),range.tooLow(i));
      assertFalse(range.tooHigh(i));
    }
  }
}
