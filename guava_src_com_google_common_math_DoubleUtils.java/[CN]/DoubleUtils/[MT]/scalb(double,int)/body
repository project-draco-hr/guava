{
  int exponent=getExponent(d);
switch (exponent) {
case MAX_DOUBLE_EXPONENT + 1:
    return d;
case MIN_DOUBLE_EXPONENT - 1:
  return d * StrictMath.pow(2.0,scale);
default :
int newExponent=exponent + scale;
if (MIN_DOUBLE_EXPONENT <= newExponent & newExponent <= MAX_DOUBLE_EXPONENT) {
long bits=Double.doubleToRawLongBits(d);
bits&=~EXPONENT_MASK;
bits|=((long)(newExponent + EXPONENT_BIAS)) << SIGNIFICAND_BITS;
return Double.longBitsToDouble(bits);
}
return d * StrictMath.pow(2.0,scale);
}
}
