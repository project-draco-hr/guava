{
  TestSuite suite=new TestSuite();
  suite.addTest(MultisetTestSuiteBuilder.using(unmodifiableMultisetGenerator()).withFeatures(CollectionSize.ANY,CollectionFeature.KNOWN_ORDER,CollectionFeature.SERIALIZABLE,CollectionFeature.ALLOWS_NULL_QUERIES).named("Multisets.unmodifiableMultiset[LinkedHashMultiset]").createTestSuite());
  suite.addTest(SortedMultisetTestSuiteBuilder.using(unmodifiableSortedMultisetGenerator()).withFeatures(CollectionSize.ANY,CollectionFeature.KNOWN_ORDER,CollectionFeature.ALLOWS_NULL_QUERIES).named("Multisets.unmodifiableMultiset[TreeMultiset]").createTestSuite());
  suite.addTest(MultisetTestSuiteBuilder.using(forSetGenerator()).withFeatures(CollectionSize.ANY,CollectionFeature.ALLOWS_NULL_VALUES,CollectionFeature.SERIALIZABLE,CollectionFeature.SUPPORTS_REMOVE,MultisetTestSuiteBuilder.NoRecurse.NO_ENTRY_SET).suppressing(getReadsDuplicateInitializingMethods()).suppressing(getSetCountDuplicateInitializingMethods()).suppressing(getIteratorDuplicateInitializingMethods()).named("Multisets.forSet").createTestSuite());
  suite.addTest(MultisetTestSuiteBuilder.using(unionGenerator()).withFeatures(CollectionSize.ANY,CollectionFeature.ALLOWS_NULL_VALUES).named("Multisets.union").createTestSuite());
  suite.addTest(MultisetTestSuiteBuilder.using(intersectionGenerator()).withFeatures(CollectionSize.ANY,CollectionFeature.ALLOWS_NULL_VALUES,CollectionFeature.KNOWN_ORDER).named("Multisets.intersection").createTestSuite());
  suite.addTest(MultisetTestSuiteBuilder.using(sumGenerator()).withFeatures(CollectionSize.ANY,CollectionFeature.ALLOWS_NULL_VALUES).named("Multisets.sum").createTestSuite());
  suite.addTest(MultisetTestSuiteBuilder.using(differenceGenerator()).withFeatures(CollectionSize.ANY,CollectionFeature.ALLOWS_NULL_VALUES,CollectionFeature.KNOWN_ORDER).named("Multisets.difference").createTestSuite());
  return suite;
}
