{
  if (graph.isDirected()) {
    Map<E,N> inEdgeMap=Maps.asMap(graph.inEdges(node),sourceNodeFn(graph));
    Map<E,N> outEdgeMap=Maps.asMap(graph.outEdges(node),targetNodeFn(graph));
    int selfLoopCount=graph.allowsSelfLoops() ? IntMath.saturatedAdd(inEdgeMap.size() - graph.degree(node),outEdgeMap.size()) : 0;
    return graph.allowsParallelEdges() ? DirectedMultiNetworkConnections.ofImmutable(inEdgeMap,outEdgeMap,selfLoopCount) : DirectedNetworkConnections.ofImmutable(inEdgeMap,outEdgeMap,selfLoopCount);
  }
 else {
    Map<E,N> incidentEdgeMap=Maps.asMap(graph.incidentEdges(node),otherNodeFn(graph,node));
    return graph.allowsParallelEdges() ? UndirectedMultiNetworkConnections.ofImmutable(incidentEdgeMap) : UndirectedNetworkConnections.ofImmutable(incidentEdgeMap);
  }
}
