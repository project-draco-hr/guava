{
  TestSuite suite=new TestSuite();
  suite.addTest(SortedSetMultimapTestSuiteBuilder.using(new TestStringSetMultimapGenerator(){
    @Override protected SetMultimap<String,String> create(    Entry<String,String>[] entries){
      SetMultimap<String,String> multimap=TreeMultimap.create(Ordering.natural().nullsFirst(),Ordering.natural().nullsFirst());
      for (      Entry<String,String> entry : entries) {
        multimap.put(entry.getKey(),entry.getValue());
      }
      return multimap;
    }
    @Override public Iterable<Entry<String,String>> order(    List<Entry<String,String>> insertionOrder){
      return new Ordering<Entry<String,String>>(){
        @Override public int compare(        Entry<String,String> left,        Entry<String,String> right){
          return ComparisonChain.start().compare(left.getKey(),right.getKey(),Ordering.natural().nullsFirst()).compare(left.getValue(),right.getValue(),Ordering.natural().nullsFirst()).result();
        }
      }
.sortedCopy(insertionOrder);
    }
  }
).named("TreeMultimap nullsFirst").withFeatures(MapFeature.ALLOWS_NULL_KEYS,MapFeature.ALLOWS_NULL_VALUES,MapFeature.GENERAL_PURPOSE,MapFeature.FAILS_FAST_ON_CONCURRENT_MODIFICATION,CollectionFeature.KNOWN_ORDER,CollectionFeature.SERIALIZABLE,CollectionSize.ANY).createTestSuite());
  suite.addTest(SortedSetTestSuiteBuilder.using(new TestStringSetGenerator(){
    @Override protected Set<String> create(    String[] elements){
      TreeMultimap<String,Integer> multimap=TreeMultimap.create(Ordering.natural().nullsFirst(),Ordering.natural());
      for (int i=0; i < elements.length; i++) {
        multimap.put(elements[i],i);
      }
      return multimap.keySet();
    }
    @Override public List<String> order(    List<String> insertionOrder){
      return Ordering.natural().nullsFirst().sortedCopy(insertionOrder);
    }
  }
).named("TreeMultimap.keySet").withFeatures(CollectionFeature.ALLOWS_NULL_VALUES,CollectionFeature.SUPPORTS_REMOVE,CollectionFeature.KNOWN_ORDER,CollectionSize.ANY).createTestSuite());
  suite.addTestSuite(TreeMultimapNaturalTest.class);
  return suite;
}
