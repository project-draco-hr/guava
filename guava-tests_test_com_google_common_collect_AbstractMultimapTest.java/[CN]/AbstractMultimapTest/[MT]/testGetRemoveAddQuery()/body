{
  multimap.put("foo",1);
  multimap.put("foo",3);
  multimap.put("bar",4);
  Collection<Integer> values=multimap.get("foo");
  Iterator<Integer> iterator=values.iterator();
  multimap.remove("foo",1);
  multimap.remove("foo",3);
  assertEquals(0,values.size());
  assertFalse(values.contains(1));
  assertFalse(values.contains(6));
  assertTrue(values.isEmpty());
  assertEquals(multimap.get("foo"),values);
  assertEquals(multimap.get("foo").hashCode(),values.hashCode());
  assertEquals(multimap.get("foo").toString(),values.toString());
  multimap.put("foo",5);
  assertEquals(1,values.size());
  assertFalse(values.contains(1));
  assertTrue(values.contains(5));
  assertFalse(values.contains(6));
  assertEquals(5,values.iterator().next().intValue());
  assertFalse(values.isEmpty());
  assertEquals(multimap.get("foo"),values);
  assertEquals(multimap.get("foo").hashCode(),values.hashCode());
  assertEquals(multimap.get("foo").toString(),values.toString());
  try {
    iterator.hasNext();
  }
 catch (  ConcurrentModificationException expected) {
  }
}
