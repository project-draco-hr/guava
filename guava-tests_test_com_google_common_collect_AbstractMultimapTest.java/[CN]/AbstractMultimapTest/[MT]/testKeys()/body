{
  multimap.put("foo",1);
  multimap.put("foo",5);
  multimap.put("foo",nullValue());
  multimap.put(nullKey(),3);
  Multiset<String> multiset=multimap.keys();
  assertEquals(3,multiset.count("foo"));
  assertEquals(1,multiset.count(nullKey()));
  ASSERT.that(multiset.elementSet()).has().allOf("foo",nullKey());
  assertEquals(2,multiset.entrySet().size());
  assertEquals(4,multiset.size());
  Set<Multiset.Entry<String>> entries=multimap.keys().entrySet();
  assertTrue(entries.contains(Multisets.immutableEntry("foo",3)));
  assertFalse(entries.contains(Multisets.immutableEntry("foo",2)));
  assertFalse(entries.contains(Maps.immutableEntry("foo",3)));
  Multiset<String> foo3null1=HashMultiset.create(asList("foo","foo",nullKey(),"foo"));
  assertEquals(foo3null1,multiset);
  assertEquals(multiset,foo3null1);
  assertFalse(multiset.equals(HashMultiset.create(asList("foo","foo",nullKey(),nullKey()))));
  assertEquals(foo3null1.hashCode(),multiset.hashCode());
  assertEquals(foo3null1.entrySet(),multiset.entrySet());
  assertEquals(multiset.entrySet(),foo3null1.entrySet());
  assertEquals(foo3null1.entrySet().hashCode(),multiset.entrySet().hashCode());
  assertEquals(0,multiset.remove("bar",1));
  assertEquals(1,multiset.remove(nullKey(),4));
  assertFalse(multimap.containsKey(nullKey()));
  assertSize(3);
  assertEquals("foo",entries.iterator().next().getElement());
  assertEquals(3,multiset.remove("foo",1));
  assertTrue(multimap.containsKey("foo"));
  assertSize(2);
  assertEquals(2,multiset.setCount("foo",0));
  assertEquals(0,multiset.setCount("bar",0));
}
