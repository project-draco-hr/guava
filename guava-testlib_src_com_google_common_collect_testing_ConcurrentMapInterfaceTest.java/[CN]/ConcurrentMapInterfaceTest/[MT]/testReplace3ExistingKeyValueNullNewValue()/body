{
  if (allowsNullValues) {
    return;
  }
  final ConcurrentMap<K,V> map;
  final K keyToReplace;
  final V oldValue;
  try {
    map=makePopulatedMap();
  }
 catch (  UnsupportedOperationException e) {
    return;
  }
  keyToReplace=map.keySet().iterator().next();
  oldValue=map.get(keyToReplace);
  int initialSize=map.size();
  if (supportsPut) {
    try {
      map.replace(keyToReplace,oldValue,null);
      fail("Expected NullPointerException");
    }
 catch (    NullPointerException e) {
    }
  }
 else {
    try {
      map.replace(keyToReplace,oldValue,null);
      fail("Expected UnsupportedOperationException or NullPointerException");
    }
 catch (    UnsupportedOperationException e) {
    }
catch (    NullPointerException e) {
    }
  }
  assertEquals(initialSize,map.size());
  assertEquals(oldValue,map.get(keyToReplace));
  assertInvariants(map);
}
