{
  Map<Float,String> m=ImmutableMap.of(4.0f,"A",3.0f,"B",2.0f,"C",1.0f,"D");
  Predicate<? super Integer> h=Predicates.equalTo(42);
  Function<? super String,Integer> g=new HashCodeFunction();
  Function<Float,String> f=Functions.forMap(m,"F");
  Predicate<Float> p1=Predicates.compose(Predicates.compose(h,g),f);
  Predicate<Float> p2=Predicates.compose(h,Functions.compose(g,f));
  assertEquals(p1.hashCode(),p2.hashCode());
  assertEquals(p1.apply(1.0f),p2.apply(1.0f));
  assertEquals(p1.apply(5.0f),p2.apply(5.0f));
}
