{
  if (!isDone()) {
    if (unit != NANOSECONDS) {
      timeout=NANOSECONDS.convert(timeout,unit);
      unit=NANOSECONDS;
    }
    ListenableFuture<? extends I> inputFuture=this.inputFuture;
    if (inputFuture != null) {
      long start=System.nanoTime();
      inputFuture.get(timeout,unit);
      timeout-=Math.max(0,System.nanoTime() - start);
    }
    long start=System.nanoTime();
    if (!outputCreated.await(timeout,unit)) {
      throw new TimeoutException();
    }
    timeout-=Math.max(0,System.nanoTime() - start);
    ListenableFuture<? extends O> outputFuture=this.outputFuture;
    if (outputFuture != null) {
      outputFuture.get(timeout,unit);
    }
  }
  return super.get(timeout,unit);
}
