{
  NullPointerTester tester=new NullPointerTester();
  SimpleNode node=new SimpleNode('a',null,null);
  tester.setDefault(BstNode.class,node);
  tester.setDefault(BstSide.class,LEFT);
  tester.setDefault(BstNodeFactory.class,nodeFactory);
  tester.setDefault(BstBalancePolicy.class,balancePolicy);
  tester.setDefault(BstPathFactory.class,pathFactory);
  tester.setDefault(BstPath.class,pathFactory.initialPath(node));
  tester.setDefault(BstInOrderPath.class,pathFactory.initialPath(node));
  tester.setDefault(Object.class,'a');
  tester.setDefault(GeneralRange.class,GeneralRange.all(Ordering.natural()));
  tester.setDefault(BstAggregate.class,countAggregate);
  BstModifier<Character,SimpleNode> modifier=new BstModifier<Character,SimpleNode>(){
    @Nullable @Override public BstModificationResult<SimpleNode> modify(    Character key,    @Nullable SimpleNode originalEntry){
      return BstModificationResult.identity(originalEntry);
    }
  }
;
  tester.setDefault(BstModificationResult.class,BstModificationResult.<SimpleNode>identity(null));
  tester.setDefault(BstModifier.class,modifier);
  tester.setDefault(BstMutationRule.class,BstMutationRule.createRule(modifier,balancePolicy,nodeFactory));
  return tester;
}
