{
  FakeTicker ticker=new FakeTicker();
  QueuingRemovalListener<Object,Object> listener=queuingRemovalListener();
  LocalCacheInternalMap<Object,Object> map=makeMap(createCacheBuilder().concurrencyLevel(1).expireAfterWrite(2,TimeUnit.NANOSECONDS).ticker(ticker).removalListener(listener));
  assertTrue(listener.isEmpty());
  Object one=new Object();
  Object two=new Object();
  Object three=new Object();
  Object four=new Object();
  Object five=new Object();
  map.put(one,two);
  ticker.advance(1);
  map.put(two,three);
  ticker.advance(1);
  map.put(three,four);
  assertTrue(listener.isEmpty());
  ticker.advance(1);
  map.put(four,five);
  assertNotified(listener,one,two,RemovalCause.EXPIRED);
  assertTrue(listener.isEmpty());
}
