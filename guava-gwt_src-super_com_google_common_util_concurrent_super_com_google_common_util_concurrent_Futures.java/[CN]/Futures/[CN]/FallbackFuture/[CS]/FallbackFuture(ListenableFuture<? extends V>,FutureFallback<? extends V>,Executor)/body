{
  running=input;
  input.addListener(new Runnable(){
    @Override public void run(){
      ListenableFuture<? extends V> localRunning=running;
      running=null;
      if (localRunning == null | isCancelled()) {
        return;
      }
      Throwable throwable;
      try {
        set(getUninterruptibly(localRunning));
        return;
      }
 catch (      ExecutionException e) {
        throwable=e.getCause();
      }
catch (      Throwable e) {
        throwable=e;
      }
      try {
        ListenableFuture<? extends V> replacement=fallback.create(throwable);
        checkNotNull(replacement,"FutureFallback.create returned null instead of a Future. " + "Did you mean to return immediateFuture(null)?");
        setFuture(replacement);
      }
 catch (      Throwable e) {
        setException(e);
      }
    }
  }
,executor);
}
