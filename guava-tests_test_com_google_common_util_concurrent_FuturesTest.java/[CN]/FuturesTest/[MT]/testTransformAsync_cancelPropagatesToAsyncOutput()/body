{
  ListenableFuture<Foo> immediate=immediateFuture(new Foo());
  final SettableFuture<Bar> secondary=SettableFuture.create();
  AsyncFunction<Foo,Bar> function=new AsyncFunction<Foo,Bar>(){
    @Override public ListenableFuture<Bar> apply(    Foo unused){
      return secondary;
    }
  }
;
  assertTrue(transformAsync(immediate,function).cancel(false));
  assertTrue(secondary.isCancelled());
  assertFalse(secondary.wasInterrupted());
}
