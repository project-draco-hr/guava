{
  final Error error=new Error("deliberate");
  AsyncFunction<String,Integer> function=new AsyncFunction<String,Integer>(){
    @Override public ListenableFuture<Integer> apply(    String input){
      throw error;
    }
  }
;
  SettableFuture<String> inputFuture=SettableFuture.create();
  ListenableFuture<Integer> outputFuture=transformAsync(inputFuture,function);
  inputFuture.set("value");
  try {
    getDone(outputFuture);
    fail();
  }
 catch (  ExecutionException expected) {
    assertSame(error,expected.getCause());
  }
}
