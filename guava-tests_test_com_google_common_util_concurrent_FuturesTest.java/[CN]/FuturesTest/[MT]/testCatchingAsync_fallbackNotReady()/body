{
  ListenableFuture<Integer> primary=immediateFailedFuture(new Exception());
  final SettableFuture<Integer> secondary=SettableFuture.create();
  AsyncFunction<Throwable,Integer> fallback=new AsyncFunction<Throwable,Integer>(){
    @Override public ListenableFuture<Integer> apply(    Throwable t){
      return secondary;
    }
  }
;
  ListenableFuture<Integer> derived=catchingAsync(primary,Throwable.class,fallback);
  secondary.set(1);
  assertEquals(1,(int)getDone(derived));
}
