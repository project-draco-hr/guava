{
  FunctionSpy<Throwable,Integer> fallback=spy(new Function<Throwable,Integer>(){
    @Override public Integer apply(    Throwable t){
      throw expectedException;
    }
  }
);
  ListenableFuture<Integer> failingFuture=immediateFailedFuture(new RuntimeException());
  ListenableFuture<Integer> faultTolerantFuture=catching(failingFuture,Throwable.class,fallback);
  try {
    getDone(faultTolerantFuture);
    fail();
  }
 catch (  ExecutionException expected) {
    assertSame(expectedException,expected.getCause());
  }
  fallback.verifyCallCount(1);
}
