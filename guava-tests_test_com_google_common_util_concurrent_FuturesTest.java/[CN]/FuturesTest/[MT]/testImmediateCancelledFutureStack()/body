{
  ListenableFuture<String> future=CallerClass1.makeImmediateCancelledFuture();
  assertTrue(future.isCancelled());
  try {
    CallerClass2.get(future);
    fail();
  }
 catch (  CancellationException expected) {
    List<StackTraceElement> stackTrace=ImmutableList.copyOf(expected.getStackTrace());
    assertFalse(Iterables.any(stackTrace,hasClassName(CallerClass1.class)));
    assertTrue(Iterables.any(stackTrace,hasClassName(CallerClass2.class)));
    assertThat(expected.getCause()).isNull();
  }
}
