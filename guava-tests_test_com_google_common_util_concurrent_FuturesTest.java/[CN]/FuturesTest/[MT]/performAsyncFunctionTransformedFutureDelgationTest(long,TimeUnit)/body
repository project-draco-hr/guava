{
  final Foo foo=new Foo();
  MockRequiresGetCallFuture<Foo> fooFuture=new MockRequiresGetCallFuture<Foo>(foo);
  Bar bar=new Bar();
  final MockRequiresGetCallFuture<Bar> barFuture=new MockRequiresGetCallFuture<Bar>(bar);
  AsyncFunction<Foo,Bar> function=new AsyncFunction<Foo,Bar>(){
    @Override public ListenableFuture<Bar> apply(    Foo from){
      assertSame(foo,from);
      return barFuture;
    }
  }
;
  ListenableFuture<Bar> chainFuture=Futures.transform(fooFuture,function);
  Bar theBar;
  if (unit != null) {
    theBar=chainFuture.get(timeout,unit);
  }
 else {
    theBar=chainFuture.get();
  }
  assertSame(bar,theBar);
  assertTrue(fooFuture.getWasGetCalled());
  assertTrue(barFuture.getWasGetCalled());
}
