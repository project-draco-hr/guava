{
  ListenableFuture<String> future=CallerClass1.immediateCancelledFuture();
  assertTrue(future.isCancelled());
  try {
    CallerClass2.get(future);
    fail();
  }
 catch (  CancellationException e) {
    List<StackTraceElement> stackTrace=ImmutableList.copyOf(e.getStackTrace());
    assertFalse(Iterables.any(stackTrace,hasClassName(CallerClass1.class)));
    assertTrue(Iterables.any(stackTrace,hasClassName(CallerClass2.class)));
    assertThat(e.getCause()).isInstanceOf(CancellationException.class);
    stackTrace=ImmutableList.copyOf(e.getCause().getStackTrace());
    assertTrue(Iterables.any(stackTrace,hasClassName(CallerClass1.class)));
    assertFalse(Iterables.any(stackTrace,hasClassName(CallerClass2.class)));
  }
}
