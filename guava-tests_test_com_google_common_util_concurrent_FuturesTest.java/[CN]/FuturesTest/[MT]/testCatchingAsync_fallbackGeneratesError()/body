{
  final Error error=new Error("deliberate");
  AsyncFunction<Throwable,Integer> fallback=new AsyncFunction<Throwable,Integer>(){
    @Override public ListenableFuture<Integer> apply(    Throwable t) throws Exception {
      throw error;
    }
  }
;
  ListenableFuture<Integer> failingFuture=immediateFailedFuture(new RuntimeException());
  try {
    getDone(catchingAsync(failingFuture,Throwable.class,fallback));
    fail();
  }
 catch (  ExecutionException expected) {
    assertSame(error,expected.getCause());
  }
}
