{
  SettableFuture<String> future=SettableFuture.create();
  CheckedFuture<String,TestException> checked=makeChecked(future,mapper);
  future.setException(new IOException("checked"));
  assertTrue(checked.isDone());
  assertFalse(checked.isCancelled());
  try {
    checked.get();
    fail();
  }
 catch (  ExecutionException expected) {
    assertThat(expected.getCause()).isInstanceOf(IOException.class);
  }
  try {
    checked.get(5,SECONDS);
    fail();
  }
 catch (  ExecutionException expected) {
    assertThat(expected.getCause()).isInstanceOf(IOException.class);
  }
  try {
    checked.checkedGet();
    fail();
  }
 catch (  TestException expected) {
    assertThat(expected.getCause()).isInstanceOf(IOException.class);
  }
  try {
    checked.checkedGet(5,SECONDS);
    fail();
  }
 catch (  TestException expected) {
    assertThat(expected.getCause()).isInstanceOf(IOException.class);
  }
}
