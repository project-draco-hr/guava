{
  final RuntimeException exception=new RuntimeException("deliberate");
  Function<Integer,String> function=new Function<Integer,String>(){
    @Override public String apply(    Integer input){
      throw exception;
    }
  }
;
  Future<String> transformed=lazyTransform(immediateFuture(1),function);
  try {
    getDone(transformed);
    fail();
  }
 catch (  ExecutionException expected) {
    assertSame(exception,expected.getCause());
  }
  try {
    getDoneFromTimeoutOverload(transformed);
    fail();
  }
 catch (  ExecutionException expected) {
    assertSame(exception,expected.getCause());
  }
}
