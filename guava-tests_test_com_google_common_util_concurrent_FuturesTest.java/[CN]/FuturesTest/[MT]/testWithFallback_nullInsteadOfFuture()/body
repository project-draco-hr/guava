{
  ListenableFuture<?> inputFuture=immediateFailedFuture(new Exception());
  ListenableFuture<?> chainedFuture=Futures.withFallback(inputFuture,new FutureFallback<Integer>(){
    @Override public ListenableFuture<Integer> create(    Throwable t){
      return null;
    }
  }
);
  try {
    chainedFuture.get();
    fail();
  }
 catch (  ExecutionException expected) {
    NullPointerException cause=(NullPointerException)expected.getCause();
    assertThat(cause).hasMessage("FutureFallback.create returned null instead of a Future. " + "Did you mean to return immediateFuture(null)?");
  }
}
