{
  TestSuite suite=new TestSuite();
  suite.addTestSuite(SynchronizedNavigableSetTest.class);
  suite.addTest(NavigableSetTestSuiteBuilder.using(new TestStringSortedSetGenerator(){
    @Override protected NavigableSet<String> create(    String[] elements){
      NavigableSet<String> innermost=new SafeTreeSet<String>();
      Collections.addAll(innermost,elements);
      TestSet<String> inner=new TestSet<String>(innermost,MUTEX);
      NavigableSet<String> outer=Synchronized.navigableSet(inner,MUTEX);
      return outer;
    }
    @Override public List<String> order(    List<String> insertionOrder){
      return Ordering.natural().sortedCopy(insertionOrder);
    }
  }
).named("Sets.synchronizedNavigableSet[SafeTreeSet]").withFeatures(CollectionSize.ANY,CollectionFeature.KNOWN_ORDER,CollectionFeature.GENERAL_PURPOSE,CollectionFeature.SERIALIZABLE).createTestSuite());
  return suite;
}
