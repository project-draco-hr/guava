{
  ImmutableTable.Builder<Character,Integer,String> builder=ImmutableTable.builder();
  builder.orderRowsBy(Ordering.natural());
  builder.orderColumnsBy(Ordering.natural());
  builder.put('c',3,"foo");
  builder.put('c',2,"bar");
  builder.put('c',1,"baz");
  builder.put('b',3,"cat");
  builder.put('b',1,"dog");
  builder.put('a',3,"foo");
  builder.put('a',2,"bar");
  builder.put('a',1,"baz");
  Table<Character,Integer,String> table=builder.build();
  assertThat(table.rowKeySet()).has().exactly('a','b','c').inOrder();
  assertThat(table.columnKeySet()).has().exactly(1,2,3).inOrder();
  assertThat(table.values()).has().exactly("baz","bar","foo","dog","cat","baz","bar","foo").inOrder();
  assertThat(table.row('c').keySet()).has().exactly(1,2,3).inOrder();
  assertThat(table.column(1).keySet()).has().exactly('a','b','c').inOrder();
}
