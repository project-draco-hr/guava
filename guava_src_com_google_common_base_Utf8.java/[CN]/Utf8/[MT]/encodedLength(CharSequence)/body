{
  long utf8Length=0;
  for (int charIndex=0; charIndex < sequence.length(); charIndex++) {
    char c=sequence.charAt(charIndex);
    if (c < 0x80) {
      utf8Length+=1;
    }
 else     if (c < 0x800) {
      utf8Length+=2;
    }
 else     if (c < Character.MIN_SURROGATE || Character.MAX_SURROGATE < c) {
      utf8Length+=3;
    }
 else {
      int cp=Character.codePointAt(sequence,charIndex);
      if (cp < Character.MIN_SUPPLEMENTARY_CODE_POINT) {
        throw new IllegalArgumentException("Unpaired surrogate at index " + charIndex);
      }
      utf8Length+=4;
      charIndex++;
    }
  }
  int result=(int)utf8Length;
  if (result != utf8Length) {
    throw new IllegalArgumentException("UTF-8 length does not fit in int: " + utf8Length);
  }
  return result;
}
