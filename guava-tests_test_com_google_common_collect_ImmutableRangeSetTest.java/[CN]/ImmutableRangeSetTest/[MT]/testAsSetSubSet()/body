{
  ImmutableRangeSet<Integer> rangeSet=ImmutableRangeSet.<Integer>builder().add(Range.closed(2,4)).add(Range.open(6,7)).add(Range.closedOpen(8,10)).add(Range.openClosed(15,17)).build();
  ImmutableSortedSet<Integer> expectedSet=ImmutableSortedSet.of(2,3,4,8,9,16,17);
  ImmutableSortedSet<Integer> asSet=rangeSet.asSet(DiscreteDomain.integers());
  for (int i=0; i <= 20; i++) {
    for (int j=i + 1; j <= 20; j++) {
      assertEquals(expectedSet.subSet(i,false,j,false),asSet.subSet(i,false,j,false));
      assertEquals(expectedSet.subSet(i,true,j,false),asSet.subSet(i,true,j,false));
      assertEquals(expectedSet.subSet(i,false,j,true),asSet.subSet(i,false,j,true));
      assertEquals(expectedSet.subSet(i,true,j,true),asSet.subSet(i,true,j,true));
    }
  }
}
