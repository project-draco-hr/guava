{
  Preconditions.checkPositionIndex(start,1);
  return new UnmodifiableListIterator<E>(){
    boolean hasNext=start == 0;
    @Override public boolean hasNext(){
      return hasNext;
    }
    @Override public boolean hasPrevious(){
      return !hasNext;
    }
    @Override public E next(){
      if (!hasNext) {
        throw new NoSuchElementException();
      }
      hasNext=false;
      return element;
    }
    @Override public int nextIndex(){
      return hasNext ? 0 : 1;
    }
    @Override public E previous(){
      if (hasNext) {
        throw new NoSuchElementException();
      }
      hasNext=true;
      return element;
    }
    @Override public int previousIndex(){
      return hasNext ? -1 : 0;
    }
  }
;
}
