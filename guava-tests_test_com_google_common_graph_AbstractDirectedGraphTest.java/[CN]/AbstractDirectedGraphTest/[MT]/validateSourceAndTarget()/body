{
  for (  Integer node : directedGraph.nodes()) {
    for (    String inEdge : directedGraph.inEdges(node)) {
      Integer oppositeNode=Graphs.oppositeNode(directedGraph,inEdge,node);
      assertThat(directedGraph.source(inEdge)).isEqualTo(oppositeNode);
      assertThat(directedGraph.target(inEdge)).isEqualTo(node);
    }
    for (    String outEdge : directedGraph.outEdges(node)) {
      Integer oppositeNode=Graphs.oppositeNode(directedGraph,outEdge,node);
      assertThat(directedGraph.source(outEdge)).isEqualTo(node);
      assertThat(directedGraph.target(outEdge)).isEqualTo(oppositeNode);
    }
    for (    Integer adjacentNode : directedGraph.adjacentNodes(node)) {
      Set<String> edges=directedGraph.edgesConnecting(node,adjacentNode);
      Set<String> antiParallelEdges=directedGraph.edgesConnecting(adjacentNode,node);
      assertTrue(node.equals(adjacentNode) || Collections.disjoint(edges,antiParallelEdges));
    }
  }
}
