{
  BigInteger max=BigInteger.ZERO.setBit(64).subtract(ONE);
  for (int radix=Character.MIN_RADIX; radix <= Character.MAX_RADIX; radix++) {
    String maxAsString=max.toString(radix);
    assertEquals(max.longValue(),UnsignedLongs.parseUnsignedLong(maxAsString,radix));
    try {
      BigInteger overflow=max.add(ONE);
      String overflowAsString=overflow.toString(radix);
      UnsignedLongs.parseUnsignedLong(overflowAsString,radix);
      fail();
    }
 catch (    NumberFormatException expected) {
    }
  }
  try {
    UnsignedLongs.parseUnsignedLong("1234567890abcdef1",16);
    fail();
  }
 catch (  NumberFormatException expected) {
  }
}
