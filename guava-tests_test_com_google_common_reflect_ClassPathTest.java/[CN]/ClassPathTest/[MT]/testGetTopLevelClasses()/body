{
  Set<String> names=Sets.newHashSet();
  Set<String> strings=Sets.newHashSet();
  Set<Class<?>> classes=Sets.newHashSet();
  Set<String> packageNames=Sets.newHashSet();
  Set<String> simpleNames=Sets.newHashSet();
  ClassPath classpath=ClassPath.from(getClass().getClassLoader());
  for (  ClassInfo classInfo : classpath.getTopLevelClasses(ClassPathTest.class.getPackage().getName())) {
    names.add(classInfo.getName());
    strings.add(classInfo.toString());
    classes.add(classInfo.load());
    packageNames.add(classInfo.getPackageName());
    simpleNames.add(classInfo.getSimpleName());
  }
  assertThat(names).has().allOf(ClassPath.class.getName(),ClassPathTest.class.getName());
  assertThat(strings).has().allOf(ClassPath.class.getName(),ClassPathTest.class.getName());
  assertThat(classes).has().allOf(ClassPath.class,ClassPathTest.class);
  assertThat(packageNames).contains(ClassPath.class.getPackage().getName());
  assertThat(simpleNames).has().allOf("ClassPath","ClassPathTest");
  assertFalse(classes.contains(ClassInSubPackage.class));
}
