{
  Set<String> names=Sets.newHashSet();
  Set<String> strings=Sets.newHashSet();
  Set<Class<?>> classes=Sets.newHashSet();
  Set<String> packageNames=Sets.newHashSet();
  ClassPath classpath=ClassPath.from(getClass().getClassLoader());
  for (  ClassInfo classInfo : classpath.getClasses(ClassPathTest.class.getPackage().getName())) {
    names.add(classInfo.getName());
    strings.add(classInfo.toString());
    classes.add(classInfo.load());
    packageNames.add(classInfo.getPackageName());
  }
  ASSERT.that(names).containsAllOf(ClassPath.class.getName(),ClassPathTest.class.getName());
  ASSERT.that(strings).containsAllOf(ClassPath.class.getName(),ClassPathTest.class.getName());
  ASSERT.that(classes).containsAllOf(ClassPath.class,ClassPathTest.class);
  ASSERT.that(packageNames).containsAllOf(ClassPath.class.getPackage().getName());
  assertFalse(classes.contains(ClassInSubPackage.class));
}
