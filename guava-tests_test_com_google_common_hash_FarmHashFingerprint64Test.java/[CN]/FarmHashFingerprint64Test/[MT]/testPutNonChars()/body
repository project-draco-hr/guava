{
  Hasher hasher=HASH_FN.newHasher();
  hasher.putBoolean(true).putBoolean(true).putBoolean(false).putBoolean(true).putBoolean(false).putBoolean(false).putBoolean(false).putBoolean(false);
  final long hashCode=hasher.hash().asLong();
  hasher=HASH_FN.newHasher();
  hasher.putByte((byte)0x01).putByte((byte)0x01).putByte((byte)0x00).putByte((byte)0x01).putByte((byte)0x00).putByte((byte)0x00).putByte((byte)0x00).putByte((byte)0x00);
  assertEquals(hashCode,hasher.hash().asLong());
  hasher=HASH_FN.newHasher();
  hasher.putChar((char)0x0101).putChar((char)0x0100).putChar((char)0x0000).putChar((char)0x0000);
  assertEquals(hashCode,hasher.hash().asLong());
  hasher=HASH_FN.newHasher();
  hasher.putBytes(new byte[]{0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00});
  assertEquals(hashCode,hasher.hash().asLong());
  hasher=HASH_FN.newHasher();
  hasher.putLong(0x0000000001000101L);
  assertEquals(hashCode,hasher.hash().asLong());
  hasher=HASH_FN.newHasher();
  hasher.putShort((short)0x0101).putShort((short)0x0100).putShort((short)0x0000).putShort((short)0x0000);
  assertEquals(hashCode,hasher.hash().asLong());
}
