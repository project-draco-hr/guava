{
  checkNotNull(funnel);
  checkArgument(expectedInsertions >= 0,"Expected insertions (%s) cannot be negative",expectedInsertions);
  checkArgument(fpp > 0.0 & fpp < 1.0,"False positive probability (%s) must be in (0.0, 1.0)",fpp);
  if (expectedInsertions == 0) {
    expectedInsertions=1;
  }
  long numBits=optimalNumOfBits(expectedInsertions,fpp);
  int numHashFunctions=optimalNumOfHashFunctions(expectedInsertions,numBits);
  try {
    return new BloomFilter<T>(new BitArray(numBits),numHashFunctions,funnel,BloomFilterStrategies.MURMUR128_MITZ_32);
  }
 catch (  IllegalArgumentException e) {
    throw new IllegalArgumentException("Could not create BloomFilter of " + numBits + " bits",e);
  }
}
