{
  BigInteger sqrt0;
  BigInteger sqrt1;
  double asDouble=DoubleUtils.bigToDouble(x);
  if (!Double.isInfinite(asDouble)) {
    double sqrt0Double=Math.sqrt(asDouble);
    sqrt0=DoubleMath.roundToBigInteger(sqrt0Double,RoundingMode.HALF_EVEN);
    sqrt1=sqrt0.add(x.divide(sqrt0)).shiftRight(1);
  }
 else {
    int logFloor=log2(x,RoundingMode.FLOOR);
    int halfLogFloor=logFloor >> 1;
    sqrt0=BigInteger.ZERO.setBit(halfLogFloor);
    sqrt1=sqrt0.add(x.shiftRight(halfLogFloor)).shiftRight(1);
  }
  if (sqrt0.equals(sqrt1)) {
    return sqrt0;
  }
  do {
    sqrt0=sqrt1;
    sqrt1=sqrt0.add(x.divide(sqrt0)).shiftRight(1);
  }
 while (sqrt1.compareTo(sqrt0) < 0);
  return sqrt0;
}
