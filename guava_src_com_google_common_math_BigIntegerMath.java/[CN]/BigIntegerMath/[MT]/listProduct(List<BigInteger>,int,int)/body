{
  if ((end - start) == 0) {
    return BigInteger.ONE;
  }
  if ((end - start) == 1) {
    return nums.get(start);
  }
  if ((end - start) == 2) {
    return nums.get(start).multiply(nums.get(start + 1));
  }
  if ((end - start) == 3) {
    return nums.get(start).multiply(nums.get(start + 1)).multiply(nums.get(start + 2));
  }
  int m=(end + start) >>> 1;
  return listProduct(nums,start,m).multiply(listProduct(nums,m,end));
}
