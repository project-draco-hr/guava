{
  ScheduledThreadPoolExecutor delegate=new ScheduledThreadPoolExecutor(1);
  BlockingQueue<?> delegateQueue=delegate.getQueue();
  ListeningScheduledExecutorService service=listeningDecorator(delegate);
  ListenableFuture<?> future;
  ScheduledFuture<?> delegateFuture;
  Runnable runnable=new Runnable(){
    @Override public void run(){
    }
  }
;
  future=service.schedule(runnable,5,TimeUnit.MINUTES);
  future.cancel(true);
  assertTrue(future.isCancelled());
  delegateFuture=(ScheduledFuture<?>)delegateQueue.element();
  assertTrue(delegateFuture.isCancelled());
  delegateQueue.clear();
  future=service.scheduleAtFixedRate(runnable,5,5,TimeUnit.MINUTES);
  future.cancel(true);
  assertTrue(future.isCancelled());
  delegateFuture=(ScheduledFuture<?>)delegateQueue.element();
  assertTrue(delegateFuture.isCancelled());
  delegateQueue.clear();
  future=service.scheduleWithFixedDelay(runnable,5,5,TimeUnit.MINUTES);
  future.cancel(true);
  assertTrue(future.isCancelled());
  delegateFuture=(ScheduledFuture<?>)delegateQueue.element();
  assertTrue(delegateFuture.isCancelled());
}
