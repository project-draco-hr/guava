{
  CacheBuilder<Object,Object> builder=createCacheBuilder().concurrencyLevel(1).maximumSize(2);
  LocalLoadingCache<Object,Object> cache=makeCache(builder,identityLoader());
  assertEquals(EMPTY_STATS,cache.stats());
  Object one=new Object();
  cache.getUnchecked(one);
  CacheStats stats=cache.stats();
  assertEquals(1,stats.requestCount());
  assertEquals(0,stats.hitCount());
  assertEquals(0.0,stats.hitRate());
  assertEquals(1,stats.missCount());
  assertEquals(1.0,stats.missRate());
  assertEquals(1,stats.loadCount());
  long totalLoadTime=stats.totalLoadTime();
  assertTrue(totalLoadTime > 0);
  assertTrue(stats.averageLoadPenalty() > 0.0);
  assertEquals(0,stats.evictionCount());
  cache.getUnchecked(one);
  stats=cache.stats();
  assertEquals(2,stats.requestCount());
  assertEquals(1,stats.hitCount());
  assertEquals(1.0 / 2,stats.hitRate());
  assertEquals(1,stats.missCount());
  assertEquals(1.0 / 2,stats.missRate());
  assertEquals(1,stats.loadCount());
  assertEquals(0,stats.evictionCount());
  Object two=new Object();
  cache.getUnchecked(two);
  stats=cache.stats();
  assertEquals(3,stats.requestCount());
  assertEquals(1,stats.hitCount());
  assertEquals(1.0 / 3,stats.hitRate());
  assertEquals(2,stats.missCount());
  assertEquals(2.0 / 3,stats.missRate());
  assertEquals(2,stats.loadCount());
  assertTrue(stats.totalLoadTime() > totalLoadTime);
  totalLoadTime=stats.totalLoadTime();
  assertTrue(stats.averageLoadPenalty() > 0.0);
  assertEquals(0,stats.evictionCount());
  Object three=new Object();
  cache.getUnchecked(three);
  stats=cache.stats();
  assertEquals(4,stats.requestCount());
  assertEquals(1,stats.hitCount());
  assertEquals(1.0 / 4,stats.hitRate());
  assertEquals(3,stats.missCount());
  assertEquals(3.0 / 4,stats.missRate());
  assertEquals(3,stats.loadCount());
  assertTrue(stats.totalLoadTime() > totalLoadTime);
  totalLoadTime=stats.totalLoadTime();
  assertTrue(stats.averageLoadPenalty() > 0.0);
  assertEquals(1,stats.evictionCount());
}
