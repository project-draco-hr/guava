{
  assertEquals(-1,ArbitraryInstances.get(InputStream.class).read());
  assertEquals(-1,ArbitraryInstances.get(ByteArrayInputStream.class).read());
  assertEquals(-1,ArbitraryInstances.get(Readable.class).read(CharBuffer.allocate(1)));
  assertEquals(-1,ArbitraryInstances.get(Reader.class).read());
  assertEquals(-1,ArbitraryInstances.get(StringReader.class).read());
  assertEquals(0,ArbitraryInstances.get(Buffer.class).capacity());
  assertEquals(0,ArbitraryInstances.get(CharBuffer.class).capacity());
  assertEquals(0,ArbitraryInstances.get(ByteBuffer.class).capacity());
  assertEquals(0,ArbitraryInstances.get(ShortBuffer.class).capacity());
  assertEquals(0,ArbitraryInstances.get(IntBuffer.class).capacity());
  assertEquals(0,ArbitraryInstances.get(LongBuffer.class).capacity());
  assertEquals(0,ArbitraryInstances.get(FloatBuffer.class).capacity());
  assertEquals(0,ArbitraryInstances.get(DoubleBuffer.class).capacity());
  ArbitraryInstances.get(PrintStream.class).println("test");
  ArbitraryInstances.get(PrintWriter.class).println("test");
  assertNotNull(ArbitraryInstances.get(File.class));
  assertFreshInstanceReturned(ByteArrayOutputStream.class,OutputStream.class,Writer.class,StringWriter.class,PrintStream.class,PrintWriter.class);
}
