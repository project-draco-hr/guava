{
  Stopwatch stopwatch=new Stopwatch().start();
  Map<K,V> result;
  boolean success=false;
  try {
    @SuppressWarnings("unchecked") Map<K,V> map=(Map<K,V>)loader.loadAll(keys);
    result=map;
    success=true;
  }
 catch (  UnsupportedLoadingOperationException e) {
    success=true;
    throw e;
  }
catch (  RuntimeException e) {
    throw new UncheckedExecutionException(e);
  }
catch (  Exception e) {
    throw new ExecutionException(e);
  }
catch (  Error e) {
    throw new ExecutionError(e);
  }
 finally {
    if (!success) {
      globalStatsCounter.recordLoadException(stopwatch.elapsedTime(NANOSECONDS));
    }
  }
  if (result == null) {
    globalStatsCounter.recordLoadException(stopwatch.elapsedTime(NANOSECONDS));
    throw new InvalidCacheLoadException(loader + " returned null map from loadAll");
  }
  stopwatch.stop();
  boolean nullsPresent=false;
  for (  Map.Entry<K,V> entry : result.entrySet()) {
    K key=entry.getKey();
    V value=entry.getValue();
    if (key == null || value == null) {
      nullsPresent=true;
    }
 else {
      put(key,value);
    }
  }
  if (nullsPresent) {
    globalStatsCounter.recordLoadException(stopwatch.elapsedTime(NANOSECONDS));
    throw new InvalidCacheLoadException(loader + " returned null keys or values from loadAll");
  }
  globalStatsCounter.recordLoadSuccess(stopwatch.elapsedTime(NANOSECONDS));
  return result;
}
