{
  Object localValue=value;
  boolean rValue=false;
  if (localValue == null | localValue instanceof AbstractFuture.SetFuture) {
    Throwable cause=GENERATE_CANCELLATION_CAUSES ? new CancellationException("Future.cancel() was called.") : null;
    Object valueToSet=new Cancellation(mayInterruptIfRunning,cause);
    AbstractFuture<?> abstractFuture=this;
    while (true) {
      if (ATOMIC_HELPER.casValue(abstractFuture,localValue,valueToSet)) {
        rValue=true;
        if (mayInterruptIfRunning) {
          abstractFuture.interruptTask();
        }
        complete(abstractFuture);
        if (localValue instanceof AbstractFuture.SetFuture) {
          ListenableFuture<?> futureToPropagateTo=((AbstractFuture.SetFuture)localValue).future;
          if (futureToPropagateTo instanceof TrustedFuture) {
            AbstractFuture<?> trusted=(AbstractFuture<?>)futureToPropagateTo;
            localValue=trusted.value;
            if (localValue == null | localValue instanceof AbstractFuture.SetFuture) {
              abstractFuture=trusted;
              continue;
            }
          }
 else {
            futureToPropagateTo.cancel(mayInterruptIfRunning);
          }
        }
        break;
      }
      localValue=abstractFuture.value;
      if (!(localValue instanceof AbstractFuture.SetFuture)) {
        break;
      }
    }
  }
  return rValue;
}
