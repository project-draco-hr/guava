{
  checkNotNull(future);
  SetFuture valueToSet=new SetFuture(future);
  if (ATOMIC_HELPER.casValue(this,null,valueToSet)) {
    try {
      future.addListener(valueToSet,directExecutor());
    }
 catch (    Throwable t) {
      Failure failure;
      try {
        failure=new Failure(t);
      }
 catch (      Throwable oomMostLikely) {
        failure=Failure.FALLBACK_INSTANCE;
      }
      ATOMIC_HELPER.casValue(this,valueToSet,failure);
    }
    return true;
  }
  Object obj=value;
  if (obj instanceof Cancellation) {
    future.cancel(((Cancellation)obj).wasInterrupted);
  }
  return false;
}
