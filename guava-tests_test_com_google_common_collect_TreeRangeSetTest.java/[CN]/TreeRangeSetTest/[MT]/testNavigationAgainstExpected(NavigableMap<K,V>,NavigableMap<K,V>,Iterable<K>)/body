{
  for (  K key : keysToTest) {
    assertEquals(expected.lowerEntry(key),navigableMap.lowerEntry(key));
    assertEquals(expected.floorEntry(key),navigableMap.floorEntry(key));
    assertEquals(expected.ceilingEntry(key),navigableMap.ceilingEntry(key));
    assertEquals(expected.higherEntry(key),navigableMap.higherEntry(key));
    for (    boolean inclusive : new boolean[]{false,true}) {
      assertThat(navigableMap.headMap(key,inclusive).entrySet()).containsExactlyElementsIn(expected.headMap(key,inclusive).entrySet()).inOrder();
      assertThat(navigableMap.tailMap(key,inclusive).entrySet()).containsExactlyElementsIn(expected.tailMap(key,inclusive).entrySet()).inOrder();
      assertThat(navigableMap.headMap(key,inclusive).descendingMap().entrySet()).containsExactlyElementsIn(expected.headMap(key,inclusive).descendingMap().entrySet()).inOrder();
      assertThat(navigableMap.tailMap(key,inclusive).descendingMap().entrySet()).containsExactlyElementsIn(expected.tailMap(key,inclusive).descendingMap().entrySet()).inOrder();
    }
  }
}
