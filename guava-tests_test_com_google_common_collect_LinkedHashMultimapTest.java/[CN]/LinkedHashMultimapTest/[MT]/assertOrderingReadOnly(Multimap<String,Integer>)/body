{
  ASSERT.that(multimap.get("foo")).hasContentsInOrder(5,3);
  ASSERT.that(multimap.get("bar")).hasContentsInOrder(4,1);
  ASSERT.that(multimap.get("cow")).hasContentsInOrder(2);
  ASSERT.that(multimap.keySet()).hasContentsInOrder("foo","bar","cow");
  ASSERT.that(multimap.values()).hasContentsInOrder(5,4,3,2,1);
  Iterator<Map.Entry<String,Integer>> entryIterator=multimap.entries().iterator();
  assertEquals(Maps.immutableEntry("foo",5),entryIterator.next());
  assertEquals(Maps.immutableEntry("bar",4),entryIterator.next());
  assertEquals(Maps.immutableEntry("foo",3),entryIterator.next());
  assertEquals(Maps.immutableEntry("cow",2),entryIterator.next());
  assertEquals(Maps.immutableEntry("bar",1),entryIterator.next());
  Iterator<Map.Entry<String,Collection<Integer>>> collectionIterator=multimap.asMap().entrySet().iterator();
  Map.Entry<String,Collection<Integer>> entry=collectionIterator.next();
  assertEquals("foo",entry.getKey());
  ASSERT.that(entry.getValue()).hasContentsInOrder(5,3);
  entry=collectionIterator.next();
  assertEquals("bar",entry.getKey());
  ASSERT.that(entry.getValue()).hasContentsInOrder(4,1);
  entry=collectionIterator.next();
  assertEquals("cow",entry.getKey());
  ASSERT.that(entry.getValue()).hasContentsInOrder(2);
}
