{
  ImmutableSet<Integer> indexes=ImmutableSet.of(50,90,99);
  Map<Integer,Double> referenceQuantiles=REFERENCE_ALGORITHM.multipleQuantiles(indexes,100,dataset.clone());
  assertThat(referenceQuantiles.keySet()).isEqualTo(indexes);
  for (  QuantilesAlgorithm algorithm : NON_REFERENCE_ALGORITHMS) {
    Map<Integer,Double> quantiles=algorithm.multipleQuantiles(indexes,100,dataset.clone());
    assertWithMessage("Wrong keys from " + algorithm).that(quantiles.keySet()).isEqualTo(indexes);
    for (    int i : indexes) {
      assertWithMessage("Mismatch between %s and %s at %s",algorithm,REFERENCE_ALGORITHM,i).that(quantiles.get(i)).isWithin(ALLOWED_ERROR).of(referenceQuantiles.get(i));
    }
  }
}
