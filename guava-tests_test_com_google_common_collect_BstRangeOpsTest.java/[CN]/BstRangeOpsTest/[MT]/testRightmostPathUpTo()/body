{
  SimpleNode c=new SimpleNode('c',null,null);
  SimpleNode b=new SimpleNode('b',null,c);
  SimpleNode e=new SimpleNode('e',null,null);
  SimpleNode g=new SimpleNode('g',null,null);
  SimpleNode f=new SimpleNode('f',e,g);
  SimpleNode d=new SimpleNode('d',b,f);
  GeneralRange<Character> range1=GeneralRange.upTo(Ordering.natural(),'d',OPEN);
  ASSERT.that(pathToList(BstRangeOps.furthestPath(range1,RIGHT,pathFactory,d))).hasContentsInOrder(c,b,d);
  GeneralRange<Character> range2=GeneralRange.upTo(Ordering.natural(),'d',CLOSED);
  ASSERT.that(pathToList(BstRangeOps.furthestPath(range2,RIGHT,pathFactory,d))).hasContentsInOrder(d);
  GeneralRange<Character> range3=GeneralRange.upTo(Ordering.natural(),'a',CLOSED);
  assertNull(BstRangeOps.furthestPath(range3,RIGHT,pathFactory,d));
  GeneralRange<Character> range4=GeneralRange.upTo(Ordering.natural(),'h',CLOSED);
  ASSERT.that(pathToList(BstRangeOps.furthestPath(range4,RIGHT,pathFactory,d))).hasContentsInOrder(g,f,d);
}
