{
  ImmutableSortedSet<Integer> set=ImmutableSortedSet.of(2,4,6,8,10);
  ImmutableSortedSet<Integer> empty=ImmutableSortedSet.of();
  assertEquals(set,Sets.subSet(set,Range.atLeast(0)));
  assertEquals(ImmutableSortedSet.of(4,6,8,10),Sets.subSet(set,Range.atLeast(4)));
  assertEquals(ImmutableSortedSet.of(8,10),Sets.subSet(set,Range.atLeast(7)));
  assertEquals(empty,Sets.subSet(set,Range.atLeast(20)));
  assertEquals(set,Sets.subSet(set,Range.greaterThan(0)));
  assertEquals(ImmutableSortedSet.of(6,8,10),Sets.subSet(set,Range.greaterThan(4)));
  assertEquals(ImmutableSortedSet.of(8,10),Sets.subSet(set,Range.greaterThan(7)));
  assertEquals(empty,Sets.subSet(set,Range.greaterThan(20)));
  assertEquals(empty,Sets.subSet(set,Range.lessThan(0)));
  assertEquals(ImmutableSortedSet.of(2),Sets.subSet(set,Range.lessThan(4)));
  assertEquals(ImmutableSortedSet.of(2,4,6),Sets.subSet(set,Range.lessThan(7)));
  assertEquals(set,Sets.subSet(set,Range.lessThan(20)));
  assertEquals(empty,Sets.subSet(set,Range.atMost(0)));
  assertEquals(ImmutableSortedSet.of(2,4),Sets.subSet(set,Range.atMost(4)));
  assertEquals(ImmutableSortedSet.of(2,4,6),Sets.subSet(set,Range.atMost(7)));
  assertEquals(set,Sets.subSet(set,Range.atMost(20)));
}
