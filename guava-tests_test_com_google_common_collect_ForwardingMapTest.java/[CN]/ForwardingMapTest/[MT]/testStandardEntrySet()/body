{
  @SuppressWarnings("unchecked") final Map<String,Boolean> map=mock(Map.class);
  Map<String,Boolean> forward=new ForwardingMap<String,Boolean>(){
    @Override protected Map<String,Boolean> delegate(){
      return map;
    }
    @Override public Set<Entry<String,Boolean>> entrySet(){
      return new StandardEntrySet(){
        @Override public Iterator<Entry<String,Boolean>> iterator(){
          return Iterators.emptyIterator();
        }
      }
;
    }
  }
;
  callAllPublicMethods(Set.class,forward.entrySet());
  verify(map,atLeast(0)).clear();
  verify(map,atLeast(0)).containsKey(anyObject());
  verify(map,atLeast(0)).get(anyObject());
  verify(map,atLeast(0)).isEmpty();
  verify(map,atLeast(0)).remove(anyObject());
  verify(map,atLeast(0)).size();
  verifyNoMoreInteractions(map);
}
