{
  if (isPrimitiveOrNullable(invokable.getParameters().get(paramIndex))) {
    return;
  }
  Object[] params=buildParamList(invokable,paramIndex);
  try {
    @SuppressWarnings("unchecked") Invokable<Object,?> unsafe=(Invokable<Object,?>)invokable;
    unsafe.invoke(instance,params);
    Assert.fail("No exception thrown for parameter at index " + paramIndex + " from "+ invokable+ Arrays.toString(params)+ " for "+ testedClass);
  }
 catch (  InvocationTargetException e) {
    Throwable cause=e.getCause();
    if (policy.isExpectedType(cause)) {
      return;
    }
    AssertionFailedError error=new AssertionFailedError(String.format("wrong exception thrown from %s when passing null to %s parameter at index %s.%n" + "Full parameters: %s%n" + "Actual exception message: %s",invokable,invokable.getParameters().get(paramIndex).getType(),paramIndex,Arrays.toString(params),cause));
    error.initCause(cause);
    throw error;
  }
catch (  IllegalAccessException e) {
    throw new RuntimeException(e);
  }
}
