{
  checkNotNull(out);
  return new ByteOutput(){
    int bitBuffer=0;
    int bitBufferLength=0;
    int writtenChars=0;
    @Override public void write(    byte b) throws IOException {
      bitBuffer<<=8;
      bitBuffer|=b & 0xFF;
      bitBufferLength+=8;
      while (bitBufferLength >= bitsPerChar) {
        int charIndex=(bitBuffer >> (bitBufferLength - bitsPerChar)) & alphabetMask;
        out.write(alphabet.charAt(charIndex));
        writtenChars++;
        bitBufferLength-=bitsPerChar;
      }
    }
    @Override public void flush() throws IOException {
      out.flush();
    }
    @Override public void close() throws IOException {
      if (bitBufferLength > 0) {
        int charIndex=(bitBuffer << (bitsPerChar - bitBufferLength)) & alphabetMask;
        out.write(alphabet.charAt(charIndex));
        writtenChars++;
        if (paddingChar != null) {
          while (writtenChars % charsPerChunk != 0) {
            out.write(paddingChar.charValue());
            writtenChars++;
          }
        }
      }
      out.close();
    }
  }
;
}
