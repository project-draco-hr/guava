{
  if (!Closer.SuppressingSuppressor.isAvailable()) {
    TestLogHandler logHandler=new TestLogHandler();
    Closeables.logger.addHandler(logHandler);
    try {
      for (      InputSupplier<InputStream> in : BROKEN_INPUTS) {
        runFailureTest(in,newByteArrayOutputStreamSupplier());
        assertTrue(logHandler.getStoredLogRecords().isEmpty());
        runFailureTest(in,BROKEN_CLOSE_OUTPUT);
        assertEquals((in == BROKEN_GET_INPUT) ? 0 : 1,getAndResetRecords(logHandler));
      }
      for (      OutputSupplier<OutputStream> out : BROKEN_OUTPUTS) {
        runFailureTest(newInputStreamSupplier(new byte[10]),out);
        assertTrue(logHandler.getStoredLogRecords().isEmpty());
        runFailureTest(BROKEN_CLOSE_INPUT,out);
        assertEquals(1,getAndResetRecords(logHandler));
      }
      for (      InputSupplier<InputStream> in : BROKEN_INPUTS) {
        for (        OutputSupplier<OutputStream> out : BROKEN_OUTPUTS) {
          runFailureTest(in,out);
          assertTrue(getAndResetRecords(logHandler) <= 1);
        }
      }
    }
  finally {
      Closeables.logger.removeHandler(logHandler);
    }
  }
 else {
    for (    InputSupplier<InputStream> in : BROKEN_INPUTS) {
      int suppressed=runSuppressionFailureTest(in,newByteArrayOutputStreamSupplier());
      assertEquals(0,suppressed);
      suppressed=runSuppressionFailureTest(in,BROKEN_CLOSE_OUTPUT);
      assertEquals((in == BROKEN_GET_INPUT) ? 0 : 1,suppressed);
    }
    for (    OutputSupplier<OutputStream> out : BROKEN_OUTPUTS) {
      int suppressed=runSuppressionFailureTest(newInputStreamSupplier(new byte[10]),out);
      assertEquals(0,suppressed);
      suppressed=runSuppressionFailureTest(BROKEN_CLOSE_INPUT,out);
      assertEquals(1,suppressed);
    }
    for (    InputSupplier<InputStream> in : BROKEN_INPUTS) {
      for (      OutputSupplier<OutputStream> out : BROKEN_OUTPUTS) {
        int suppressed=runSuppressionFailureTest(in,out);
        assertTrue(suppressed <= 1);
      }
    }
  }
}
