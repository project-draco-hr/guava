{
  checkNotNull(graph,"graph");
  checkNotNull(nodePredicate,"nodePredicate");
  checkNotNull(edgePredicate,"edgePredicate");
  UndirectedGraph<N,E> copy=createUndirected(graph.config().expectedNodeCount(graph.nodes().size()).expectedEdgeCount(graph.edges().size()));
  mergeNodesFrom(graph,copy,nodePredicate);
  for (  E edge : graph.edges()) {
    if (edgePredicate.apply(edge)) {
      boolean nodesOk=true;
      Set<N> incidentNodes=graph.incidentNodes(edge);
      for (      N node : incidentNodes) {
        nodesOk&=nodePredicate.apply(node);
      }
      if (nodesOk) {
        addEdge(copy,edge,incidentNodes);
      }
    }
  }
  return copy;
}
