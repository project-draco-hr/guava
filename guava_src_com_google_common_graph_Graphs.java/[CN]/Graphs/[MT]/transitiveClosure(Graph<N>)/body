{
  MutableGraph<N> transitiveClosure=GraphBuilder.from(graph).allowsSelfLoops(true).build();
  if (graph.isDirected()) {
    for (    N node : graph.nodes()) {
      for (      N reachableNode : reachableNodes(graph,node)) {
        transitiveClosure.putEdge(node,reachableNode);
      }
    }
  }
 else {
    Set<N> visitedNodes=new HashSet<N>();
    for (    N node : graph.nodes()) {
      if (!visitedNodes.contains(node)) {
        Set<N> reachableNodes=reachableNodes(graph,node);
        visitedNodes.addAll(reachableNodes);
        int pairwiseMatch=1;
        for (        N nodeU : reachableNodes) {
          for (          N nodeV : Iterables.limit(reachableNodes,pairwiseMatch++)) {
            transitiveClosure.putEdge(nodeU,nodeV);
          }
        }
      }
    }
  }
  return transitiveClosure;
}
