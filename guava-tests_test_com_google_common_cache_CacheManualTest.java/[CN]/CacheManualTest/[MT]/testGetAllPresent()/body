{
  Cache<Integer,Integer> cache=CacheBuilder.newBuilder().build();
  CacheStats stats=cache.stats();
  assertEquals(0,stats.missCount());
  assertEquals(0,stats.loadSuccessCount());
  assertEquals(0,stats.loadExceptionCount());
  assertEquals(0,stats.hitCount());
  assertEquals(ImmutableMap.of(),cache.getAllPresent(ImmutableList.<Integer>of()));
  stats=cache.stats();
  assertEquals(0,stats.missCount());
  assertEquals(0,stats.loadSuccessCount());
  assertEquals(0,stats.loadExceptionCount());
  assertEquals(0,stats.hitCount());
  assertEquals(ImmutableMap.of(),cache.getAllPresent(asList(1,2,3)));
  stats=cache.stats();
  assertEquals(3,stats.missCount());
  assertEquals(0,stats.loadSuccessCount());
  assertEquals(0,stats.loadExceptionCount());
  assertEquals(0,stats.hitCount());
  cache.put(2,22);
  assertEquals(ImmutableMap.of(2,22),cache.getAllPresent(asList(1,2,3)));
  stats=cache.stats();
  assertEquals(5,stats.missCount());
  assertEquals(0,stats.loadSuccessCount());
  assertEquals(0,stats.loadExceptionCount());
  assertEquals(1,stats.hitCount());
  cache.put(3,33);
  assertEquals(ImmutableMap.of(2,22,3,33),cache.getAllPresent(asList(1,2,3)));
  stats=cache.stats();
  assertEquals(6,stats.missCount());
  assertEquals(0,stats.loadSuccessCount());
  assertEquals(0,stats.loadExceptionCount());
  assertEquals(3,stats.hitCount());
  cache.put(1,11);
  assertEquals(ImmutableMap.of(1,11,2,22,3,33),cache.getAllPresent(asList(1,2,3)));
  stats=cache.stats();
  assertEquals(6,stats.missCount());
  assertEquals(0,stats.loadSuccessCount());
  assertEquals(0,stats.loadExceptionCount());
  assertEquals(6,stats.hitCount());
}
