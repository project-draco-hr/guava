{
  AbstractIterator<Integer> empty=new AbstractIterator<Integer>(){
    private boolean alreadyCalledEndOfData;
    @Override public Integer computeNext(){
      if (alreadyCalledEndOfData) {
        fail("Should not have been invoked again");
      }
      alreadyCalledEndOfData=true;
      return endOfData();
    }
  }
;
  try {
    empty.peek();
    fail("peek() should throw NoSuchElementException at end");
  }
 catch (  NoSuchElementException expected) {
  }
  try {
    empty.peek();
    fail("peek() should continue to throw NoSuchElementException at end");
  }
 catch (  NoSuchElementException expected) {
  }
}
