{
  QueuingRemovalListener<Object,Object> listener=queuingRemovalListener();
  LocalCache<Object,Object> map=makeMap(createCacheBuilder().removalListener(listener));
  assertTrue(listener.isEmpty());
  Object one=new Object();
  Object two=new Object();
  Object three=new Object();
  Object four=new Object();
  Object five=new Object();
  Object six=new Object();
  map.put(one,two);
  map.put(one,three);
  assertNotified(listener,one,two,RemovalCause.REPLACED);
  Map<Object,Object> newMap=ImmutableMap.of(one,four);
  map.putAll(newMap);
  assertNotified(listener,one,three,RemovalCause.REPLACED);
  map.replace(one,five);
  assertNotified(listener,one,four,RemovalCause.REPLACED);
  map.replace(one,five,six);
  assertNotified(listener,one,five,RemovalCause.REPLACED);
}
