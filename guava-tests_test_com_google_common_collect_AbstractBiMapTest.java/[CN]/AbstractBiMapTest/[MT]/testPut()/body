{
  bimap.put(1,"one");
  assertEquals(ImmutableMap.of(1,"one"),bimap);
  bimap.put(2,"two");
  assertEquals(ImmutableMap.of(1,"one",2,"two"),bimap);
  bimap.put(2,"two");
  assertEquals(ImmutableMap.of(1,"one",2,"two"),bimap);
  bimap.put(1,"ONE");
  assertEquals(ImmutableMap.of(1,"ONE",2,"two"),bimap);
  try {
    bimap.put(3,"two");
    fail();
  }
 catch (  IllegalArgumentException e) {
  }
  assertEquals(ImmutableMap.of(1,"ONE",2,"two"),bimap);
  bimap.put(-1,null);
  bimap.put(null,"null");
  Map<Integer,String> expected=Maps.newHashMap();
  expected.put(1,"ONE");
  expected.put(2,"two");
  expected.put(-1,null);
  expected.put(null,"null");
  assertEquals(expected,bimap);
  bimap.remove(-1);
  bimap.put(null,null);
  expected.remove(-1);
  expected.put(null,null);
  assertEquals(expected,bimap);
}
