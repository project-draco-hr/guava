{
  for (  MapMaker maker : allEvictingMakers()) {
    MapMakerInternalMap<Object,Object> map=makeMap(maker.concurrencyLevel(1));
    Segment<Object,Object> segment=map.segments[0];
    if (segment.recencyQueue != DISCARDING_QUEUE) {
      Object keyOne=new Object();
      Object valueOne=new Object();
      map.put(keyOne,valueOne);
      assertTrue(segment.recencyQueue.isEmpty());
      for (int i=0; i < DRAIN_THRESHOLD / 2; i++) {
        Object unused=map.get(keyOne);
      }
      assertFalse(segment.recencyQueue.isEmpty());
      for (int i=0; i < DRAIN_THRESHOLD * 2; i++) {
        Object unused=map.get(keyOne);
        assertTrue(segment.recencyQueue.size() <= DRAIN_THRESHOLD);
      }
      for (int i=0; i < DRAIN_THRESHOLD * 2; i++) {
        map.put(new Object(),new Object());
      }
      assertTrue(segment.recencyQueue.isEmpty());
      for (int i=0; i < DRAIN_THRESHOLD / 2; i++) {
        Object unused=map.get(keyOne);
      }
      assertFalse(segment.recencyQueue.isEmpty());
      for (      Object key : map.keySet()) {
        Object unused=map.get(key);
        assertTrue(segment.recencyQueue.size() <= DRAIN_THRESHOLD);
      }
    }
  }
}
