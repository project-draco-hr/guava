{
  MapMakerInternalMap<Object,Object,?,?> map=makeMap(createMapMaker().concurrencyLevel(1).weakValues());
  Segment<Object,Object,?,?> segment=map.segments[0];
  Object key=new Object();
  int hash=map.hash(key);
  Object oldValue=new Object();
  Object newValue=new Object();
  AtomicReferenceArray<? extends InternalEntry<Object,Object,?>> table=segment.table;
  int index=hash & (table.length() - 1);
  InternalEntry<Object,Object,?> entry=segment.newEntryForTesting(key,hash,null);
  WeakValueReference<Object,Object,?> oldValueRef=segment.newWeakValueReferenceForTesting(entry,oldValue);
  segment.setWeakValueReferenceForTesting(entry,oldValueRef);
  assertNull(segment.replace(key,hash,newValue));
  assertEquals(0,segment.count);
  segment.setTableEntryForTesting(index,entry);
  segment.count++;
  assertEquals(1,segment.count);
  assertSame(oldValue,segment.get(key,hash));
  assertSame(oldValue,segment.replace(key,hash,newValue));
  assertEquals(1,segment.count);
  assertSame(newValue,segment.get(key,hash));
  segment.setWeakValueReferenceForTesting(entry,oldValueRef);
  oldValueRef.clear();
  assertNull(segment.replace(key,hash,newValue));
  assertEquals(0,segment.count);
  assertNull(segment.get(key,hash));
}
