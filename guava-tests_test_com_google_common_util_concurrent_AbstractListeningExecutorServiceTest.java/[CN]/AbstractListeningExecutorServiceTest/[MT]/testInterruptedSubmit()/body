{
  final CountDownLatch submitted=new CountDownLatch(1);
  final CountDownLatch quittingTime=new CountDownLatch(1);
  final ExecutorService p=new ThreadPoolExecutor(1,1,60,TimeUnit.SECONDS,new ArrayBlockingQueue<Runnable>(10));
  final Callable<Void> awaiter=new CheckedCallable<Void>(){
    @Override public Void realCall() throws InterruptedException {
      quittingTime.await();
      return null;
    }
  }
;
  try {
    Thread t=new Thread(new CheckedInterruptedRunnable(){
      @Override public void realRun() throws Exception {
        Future<Void> future=p.submit(awaiter);
        submitted.countDown();
        future.get();
      }
    }
);
    t.start();
    submitted.await();
    t.interrupt();
    t.join();
  }
  finally {
    quittingTime.countDown();
    joinPool(p);
  }
}
