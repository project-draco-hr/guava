{
  Range<Integer> range=Range.closed(4,8);
  assertEquals(Range.closed(0,8),range.span(Range.closed(0,2)));
  assertEquals(Range.atMost(8),range.span(Range.atMost(2)));
  assertEquals(Range.closed(2,8),range.span(Range.closedOpen(2,4)));
  assertEquals(Range.atMost(8),range.span(Range.lessThan(4)));
  assertEquals(Range.closed(2,8),range.span(Range.closed(2,6)));
  assertEquals(Range.atMost(8),range.span(Range.atMost(6)));
  assertEquals(range,range.span(Range.closed(4,6)));
  assertEquals(range,range.span(Range.closed(5,7)));
  assertEquals(range,range.span(Range.closed(6,8)));
  assertEquals(range,range.span(range));
  assertEquals(Range.closed(4,10),range.span(Range.closed(4,10)));
  assertEquals(Range.atLeast(4),range.span(Range.atLeast(4)));
  assertEquals(Range.closed(2,8),range.span(Range.closed(2,8)));
  assertEquals(Range.atMost(8),range.span(Range.atMost(8)));
  assertEquals(Range.closed(2,10),range.span(Range.closed(2,10)));
  assertEquals(Range.<Integer>all(),range.span(Range.<Integer>all()));
  assertEquals(Range.closed(4,10),range.span(Range.closed(6,10)));
  assertEquals(Range.atLeast(4),range.span(Range.atLeast(6)));
  assertEquals(Range.closed(4,10),range.span(Range.openClosed(8,10)));
  assertEquals(Range.atLeast(4),range.span(Range.greaterThan(8)));
  assertEquals(Range.closed(4,12),range.span(Range.closed(10,12)));
  assertEquals(Range.atLeast(4),range.span(Range.atLeast(10)));
}
