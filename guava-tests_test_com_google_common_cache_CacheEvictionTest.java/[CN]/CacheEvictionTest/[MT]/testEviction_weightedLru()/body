{
  IdentityLoader<Integer> loader=identityLoader();
  Cache<Integer,Integer> cache=CacheBuilder.newBuilder().concurrencyLevel(1).maximumWeight(45).weigher(intKeyWeigher()).build(loader);
  CacheTesting.warmUp(cache,0,10);
  Set<Integer> keySet=cache.asMap().keySet();
  ASSERT.that(keySet).hasContentsAnyOrder(0,1,2,3,4,5,6,7,8,9);
  getAll(cache,asList(0,1,2));
  ASSERT.that(keySet).hasContentsAnyOrder(3,4,5,6,7,8,9,0,1,2);
  getAll(cache,asList(10));
  ASSERT.that(keySet).hasContentsAnyOrder(6,7,8,9,0,1,2,10);
  getAll(cache,asList(6,7,8));
  ASSERT.that(keySet).hasContentsAnyOrder(9,0,1,2,10,6,7,8);
  getAll(cache,asList(15));
  ASSERT.that(keySet).hasContentsAnyOrder(0,6,7,8,15);
  getAll(cache,asList(9));
  ASSERT.that(keySet).hasContentsAnyOrder(0,6,7,8,15,9);
  getAll(cache,asList(1));
  ASSERT.that(keySet).hasContentsAnyOrder(0,7,8,15,9,1);
}
