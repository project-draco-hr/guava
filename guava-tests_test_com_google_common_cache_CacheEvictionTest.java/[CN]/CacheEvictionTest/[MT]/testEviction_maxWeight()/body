{
  CountingRemovalListener<Integer,Integer> removalListener=countingRemovalListener();
  IdentityLoader<Integer> loader=identityLoader();
  Cache<Integer,Integer> cache=CacheBuilder.newBuilder().maximumWeight(2 * MAX_SIZE).weigher(constantWeigher(2)).removalListener(removalListener).build(loader);
  for (int i=0; i < 2 * MAX_SIZE; i++) {
    cache.getUnchecked(i);
    assertTrue(cache.size() <= MAX_SIZE);
  }
  assertEquals(MAX_SIZE,CacheTesting.evictionQueueSize(cache));
  assertEquals(MAX_SIZE,cache.size());
  CacheTesting.processPendingNotifications(cache);
  assertEquals(MAX_SIZE,removalListener.getCount());
  CacheTesting.checkValidState(cache);
}
