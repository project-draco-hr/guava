{
  lock();
  try {
    int newCount=count - 1;
    AtomicReferenceArray<ReferenceEntry<K,V>> table=this.table;
    int index=hash & (table.length() - 1);
    ReferenceEntry<K,V> first=table.get(index);
    for (ReferenceEntry<K,V> e=first; e != null; e=e.getNext()) {
      if (e == entry) {
        ++modCount;
        ReferenceEntry<K,V> newFirst=removeFromTable(first,e);
        table.set(index,newFirst);
        count=newCount;
        return true;
      }
    }
    return false;
  }
  finally {
    unlock();
  }
}
