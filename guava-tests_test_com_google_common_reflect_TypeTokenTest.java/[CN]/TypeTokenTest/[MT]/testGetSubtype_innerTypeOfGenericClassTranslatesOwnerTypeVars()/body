{
  TypeToken<TwoTypeArgs<?,?>.InnerType<?,?>> supertype=new TypeToken<TwoTypeArgs<?,?>.InnerType<?,?>>(){
  }
;
  TypeToken<StringForFirstTypeArg<Integer>.StringInnerType<Long>> subtype=new TypeToken<StringForFirstTypeArg<Integer>.StringInnerType<Long>>(){
  }
;
  assertTrue(subtype.isSubtypeOf(supertype));
  ParameterizedType actualSubtype=(ParameterizedType)supertype.getSubtype(subtype.getRawType()).getType();
  assertEquals(StringForFirstTypeArg.StringInnerType.class,actualSubtype.getRawType());
  assertThat(actualSubtype.getActualTypeArguments()[0]).isInstanceOf(WildcardType.class);
  ParameterizedType actualOwnerType=(ParameterizedType)actualSubtype.getOwnerType();
  assertEquals(StringForFirstTypeArg.class,actualOwnerType.getRawType());
}
