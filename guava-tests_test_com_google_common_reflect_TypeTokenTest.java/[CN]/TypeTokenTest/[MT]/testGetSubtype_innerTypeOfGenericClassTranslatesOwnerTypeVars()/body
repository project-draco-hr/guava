{
  TypeToken<TwoTypeArgs<?,?>.InnerType<?,?>> superType=new TypeToken<TwoTypeArgs<?,?>.InnerType<?,?>>(){
  }
;
  TypeToken<StringForFirstTypeArg<Integer>.StringInnerType<Long>> subType=new TypeToken<StringForFirstTypeArg<Integer>.StringInnerType<Long>>(){
  }
;
  assertTrue(subType.isSubtypeOf(superType));
  ParameterizedType actualSubType=(ParameterizedType)superType.getSubtype(subType.getRawType()).getType();
  assertEquals(StringForFirstTypeArg.StringInnerType.class,actualSubType.getRawType());
  assertThat(actualSubType.getActualTypeArguments()[0]).isInstanceOf(WildcardType.class);
  ParameterizedType actualOwnerType=(ParameterizedType)actualSubType.getOwnerType();
  assertEquals(StringForFirstTypeArg.class,actualOwnerType.getRawType());
}
