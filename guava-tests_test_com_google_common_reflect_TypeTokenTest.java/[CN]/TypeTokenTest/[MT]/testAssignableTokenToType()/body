{
  TypeToken<List<String>> tokenL=new TypeToken<List<String>>(){
  }
;
  assertTrue(tokenL.isSupertypeOf(new TypeToken<List<String>>(){
  }
));
  assertTrue(tokenL.isSupertypeOf(new TypeToken<ArrayList<String>>(){
  }
));
  assertTrue(tokenL.isSupertypeOf(new TypeToken<StringList>(){
  }
));
  TypeToken<First<String>> tokenF=new TypeToken<First<String>>(){
  }
;
  assertTrue(tokenF.isSupertypeOf(new TypeToken<Second<String>>(){
  }
));
  assertTrue(tokenF.isSupertypeOf(new TypeToken<Third<String,Integer>>(){
  }
));
  assertFalse(tokenF.isSupertypeOf(new TypeToken<Third<Integer,String>>(){
  }
));
  assertTrue(tokenF.isSupertypeOf(new TypeToken<Fourth<Integer,String>>(){
  }
));
  assertFalse(tokenF.isSupertypeOf(new TypeToken<Fourth<String,Integer>>(){
  }
));
  assertTrue(tokenF.isSupertypeOf(new TypeToken<ConcreteIS>(){
  }
));
  assertFalse(tokenF.isSupertypeOf(new TypeToken<ConcreteSI>(){
  }
));
}
