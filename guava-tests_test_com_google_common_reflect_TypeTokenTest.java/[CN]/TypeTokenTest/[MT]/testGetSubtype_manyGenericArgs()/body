{
class FourTypeArgs<T1,T2,T3,T4> {
  }
class ThreeTypeArgs<T1,T2,T3> extends FourTypeArgs<T1,T2,T3,String> {
  }
  TypeToken<FourTypeArgs<T,Integer,?,?>> supertype=new TypeToken<FourTypeArgs<T,Integer,?,?>>(){
  }
;
  TypeToken<ThreeTypeArgs<T,Integer,String>> subtype=new TypeToken<ThreeTypeArgs<T,Integer,String>>(){
  }
;
  assertTrue(subtype.isSubtypeOf(supertype));
  assertEquals(new TypeToken<ThreeTypeArgs<T,Integer,?>>(){
  }
,supertype.getSubtype(subtype.getRawType()));
}
