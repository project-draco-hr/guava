{
class SingleGenericExtendsBase<T> implements GenericClass.Base {
  }
  TypeToken<GenericClass.Base> supertype=new TypeToken<GenericClass.Base>(){
  }
;
  TypeToken<SingleGenericExtendsBase<String>> subtype=new TypeToken<SingleGenericExtendsBase<String>>(){
  }
;
  assertTrue(subtype.isSubtypeOf(supertype));
  ParameterizedType actualSubtype=(ParameterizedType)supertype.getSubtype(subtype.getRawType()).getType();
  assertEquals(SingleGenericExtendsBase.class,actualSubtype.getRawType());
  assertTrue(TypeToken.of(actualSubtype).isSubtypeOf(supertype));
}
