{
class SingleGenericExtendsBase<T> implements GenericClass.Base {
  }
  TypeToken<GenericClass.Base> superType=new TypeToken<GenericClass.Base>(){
  }
;
  TypeToken<SingleGenericExtendsBase<String>> subType=new TypeToken<SingleGenericExtendsBase<String>>(){
  }
;
  assertTrue(subType.isSubtypeOf(superType));
  ParameterizedType actualSubType=(ParameterizedType)superType.getSubtype(subType.getRawType()).getType();
  assertEquals(SingleGenericExtendsBase.class,actualSubType.getRawType());
  assertTrue(TypeToken.of(actualSubType).isSubtypeOf(superType));
}
