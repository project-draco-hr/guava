{
  LoadingCache<Object,Object> cache=CacheBuilder.newBuilder().build(new CacheLoader<Object,Object>(){
    @Override public Object load(    Object key){
      throw new AssertionError();
    }
    @Override public Map<Object,Object> loadAll(    Iterable<? extends Object> keys){
      return null;
    }
  }
);
  CacheStats stats=cache.stats();
  assertEquals(0,stats.missCount());
  assertEquals(0,stats.loadSuccessCount());
  assertEquals(0,stats.loadExceptionCount());
  assertEquals(0,stats.hitCount());
  try {
    cache.getAll(asList(new Object()));
    fail();
  }
 catch (  InvalidCacheLoadException expected) {
  }
  stats=cache.stats();
  assertEquals(1,stats.missCount());
  assertEquals(0,stats.loadSuccessCount());
  assertEquals(1,stats.loadExceptionCount());
  assertEquals(0,stats.hitCount());
}
